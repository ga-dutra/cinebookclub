
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/index';
declare const prisma: unique symbol
export interface PrismaPromise<A> extends Promise<A> {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model medias
 * 
 */
export type medias = {
  id: number
  name: string
}

/**
 * Model readings
 * 
 */
export type readings = {
  id: number
  medias_id: number
  user_id: number
  grade: Prisma.Decimal
  review: string | null
  book_api_id: string
  title: string
  author: string
  description: string | null
  img: string
  page_count: number
  read_at: Date
}

/**
 * Model sessions
 * 
 */
export type sessions = {
  id: number
  user_id: number
  token: string
  created_at: Date
  updated_at: Date | null
  active: boolean
}

/**
 * Model users
 * 
 */
export type users = {
  id: number
  email: string
  password: string
  created_at: Date
  updated_at: Date | null
}

/**
 * Model books_wishlist
 * 
 */
export type books_wishlist = {
  id: number
  user_id: number
  medias_id: number
  created_at: Date
  updated_at: Date | null
  book_api_id: string
  title: string
  author: string
  description: string
  img: string
  page_count: number
}

/**
 * Model films_wishlist
 * 
 */
export type films_wishlist = {
  id: number
  medias_id: number
  user_id: number
  api_id: string
  title: string
  tagline: string
  runtime: number
  created_at: Date
  img: string
  vote_average: number
  overview: string
}

/**
 * Model tv_shows_wishlist
 * 
 */
export type tv_shows_wishlist = {
  id: number
  medias_id: number
  user_id: number
  api_id: string
  title: string
  creator: string
  seasons_number: number
  tagline: string
  img: string
  created_at: Date
  vote_average: number
  overview: string
}

/**
 * Model watchings
 * 
 */
export type watchings = {
  id: number
  medias_id: number
  user_id: number
  api_id: string
  title: string
  overview: string
  release_date: string
  img: string
  created_at: Date
  vote_average: number
  watched_at: Date
  grade: Prisma.Decimal
  review: string | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Medias
 * const medias = await prisma.medias.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Medias
   * const medias = await prisma.medias.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Prisma.TransactionClient) => Promise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<R>

      /**
   * `prisma.medias`: Exposes CRUD operations for the **medias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Medias
    * const medias = await prisma.medias.findMany()
    * ```
    */
  get medias(): Prisma.mediasDelegate<GlobalReject>;

  /**
   * `prisma.readings`: Exposes CRUD operations for the **readings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Readings
    * const readings = await prisma.readings.findMany()
    * ```
    */
  get readings(): Prisma.readingsDelegate<GlobalReject>;

  /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<GlobalReject>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<GlobalReject>;

  /**
   * `prisma.books_wishlist`: Exposes CRUD operations for the **books_wishlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Books_wishlists
    * const books_wishlists = await prisma.books_wishlist.findMany()
    * ```
    */
  get books_wishlist(): Prisma.books_wishlistDelegate<GlobalReject>;

  /**
   * `prisma.films_wishlist`: Exposes CRUD operations for the **films_wishlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Films_wishlists
    * const films_wishlists = await prisma.films_wishlist.findMany()
    * ```
    */
  get films_wishlist(): Prisma.films_wishlistDelegate<GlobalReject>;

  /**
   * `prisma.tv_shows_wishlist`: Exposes CRUD operations for the **tv_shows_wishlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tv_shows_wishlists
    * const tv_shows_wishlists = await prisma.tv_shows_wishlist.findMany()
    * ```
    */
  get tv_shows_wishlist(): Prisma.tv_shows_wishlistDelegate<GlobalReject>;

  /**
   * `prisma.watchings`: Exposes CRUD operations for the **watchings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Watchings
    * const watchings = await prisma.watchings.findMany()
    * ```
    */
  get watchings(): Prisma.watchingsDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.9.0
   * Query Engine version: 39190b250ebc338586e25e6da45e5e783bc8a635
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: runtime.Types.Utils.LegacyExact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    medias: 'medias',
    readings: 'readings',
    sessions: 'sessions',
    users: 'users',
    books_wishlist: 'books_wishlist',
    films_wishlist: 'films_wishlist',
    tv_shows_wishlist: 'tv_shows_wishlist',
    watchings: 'watchings'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, '$connect' | '$disconnect' | '$on' | '$transaction' | '$use'>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MediasCountOutputType
   */


  export type MediasCountOutputType = {
    books_wishlist: number
    films_wishlist: number
    readings: number
    tv_shows_wishlist: number
    watchings: number
  }

  export type MediasCountOutputTypeSelect = {
    books_wishlist?: boolean
    films_wishlist?: boolean
    readings?: boolean
    tv_shows_wishlist?: boolean
    watchings?: boolean
  }

  export type MediasCountOutputTypeGetPayload<S extends boolean | null | undefined | MediasCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? MediasCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (MediasCountOutputTypeArgs)
    ? MediasCountOutputType 
    : S extends { select: any } & (MediasCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof MediasCountOutputType ? MediasCountOutputType[P] : never
  } 
      : MediasCountOutputType




  // Custom InputTypes

  /**
   * MediasCountOutputType without action
   */
  export type MediasCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the MediasCountOutputType
     */
    select?: MediasCountOutputTypeSelect | null
  }



  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    books_wishlist: number
    films_wishlist: number
    readings: number
    sessions: number
    tv_shows_wishlist: number
    watchings: number
  }

  export type UsersCountOutputTypeSelect = {
    books_wishlist?: boolean
    films_wishlist?: boolean
    readings?: boolean
    sessions?: boolean
    tv_shows_wishlist?: boolean
    watchings?: boolean
  }

  export type UsersCountOutputTypeGetPayload<S extends boolean | null | undefined | UsersCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UsersCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UsersCountOutputTypeArgs)
    ? UsersCountOutputType 
    : S extends { select: any } & (UsersCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UsersCountOutputType ? UsersCountOutputType[P] : never
  } 
      : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model medias
   */


  export type AggregateMedias = {
    _count: MediasCountAggregateOutputType | null
    _avg: MediasAvgAggregateOutputType | null
    _sum: MediasSumAggregateOutputType | null
    _min: MediasMinAggregateOutputType | null
    _max: MediasMaxAggregateOutputType | null
  }

  export type MediasAvgAggregateOutputType = {
    id: number | null
  }

  export type MediasSumAggregateOutputType = {
    id: number | null
  }

  export type MediasMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type MediasMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type MediasCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type MediasAvgAggregateInputType = {
    id?: true
  }

  export type MediasSumAggregateInputType = {
    id?: true
  }

  export type MediasMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type MediasMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type MediasCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type MediasAggregateArgs = {
    /**
     * Filter which medias to aggregate.
     */
    where?: mediasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of medias to fetch.
     */
    orderBy?: Enumerable<mediasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mediasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned medias
    **/
    _count?: true | MediasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MediasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MediasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MediasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MediasMaxAggregateInputType
  }

  export type GetMediasAggregateType<T extends MediasAggregateArgs> = {
        [P in keyof T & keyof AggregateMedias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMedias[P]>
      : GetScalarType<T[P], AggregateMedias[P]>
  }




  export type MediasGroupByArgs = {
    where?: mediasWhereInput
    orderBy?: Enumerable<mediasOrderByWithAggregationInput>
    by: MediasScalarFieldEnum[]
    having?: mediasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MediasCountAggregateInputType | true
    _avg?: MediasAvgAggregateInputType
    _sum?: MediasSumAggregateInputType
    _min?: MediasMinAggregateInputType
    _max?: MediasMaxAggregateInputType
  }


  export type MediasGroupByOutputType = {
    id: number
    name: string
    _count: MediasCountAggregateOutputType | null
    _avg: MediasAvgAggregateOutputType | null
    _sum: MediasSumAggregateOutputType | null
    _min: MediasMinAggregateOutputType | null
    _max: MediasMaxAggregateOutputType | null
  }

  type GetMediasGroupByPayload<T extends MediasGroupByArgs> = PrismaPromise<
    Array<
      PickArray<MediasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MediasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MediasGroupByOutputType[P]>
            : GetScalarType<T[P], MediasGroupByOutputType[P]>
        }
      >
    >


  export type mediasSelect = {
    id?: boolean
    name?: boolean
    books_wishlist?: boolean | medias$books_wishlistArgs
    films_wishlist?: boolean | medias$films_wishlistArgs
    readings?: boolean | medias$readingsArgs
    tv_shows_wishlist?: boolean | medias$tv_shows_wishlistArgs
    watchings?: boolean | medias$watchingsArgs
    _count?: boolean | MediasCountOutputTypeArgs
  }


  export type mediasInclude = {
    books_wishlist?: boolean | medias$books_wishlistArgs
    films_wishlist?: boolean | medias$films_wishlistArgs
    readings?: boolean | medias$readingsArgs
    tv_shows_wishlist?: boolean | medias$tv_shows_wishlistArgs
    watchings?: boolean | medias$watchingsArgs
    _count?: boolean | MediasCountOutputTypeArgs
  }

  export type mediasGetPayload<S extends boolean | null | undefined | mediasArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? medias :
    S extends undefined ? never :
    S extends { include: any } & (mediasArgs | mediasFindManyArgs)
    ? medias  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'books_wishlist' ? Array < books_wishlistGetPayload<S['include'][P]>>  :
        P extends 'films_wishlist' ? Array < films_wishlistGetPayload<S['include'][P]>>  :
        P extends 'readings' ? Array < readingsGetPayload<S['include'][P]>>  :
        P extends 'tv_shows_wishlist' ? Array < tv_shows_wishlistGetPayload<S['include'][P]>>  :
        P extends 'watchings' ? Array < watchingsGetPayload<S['include'][P]>>  :
        P extends '_count' ? MediasCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (mediasArgs | mediasFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'books_wishlist' ? Array < books_wishlistGetPayload<S['select'][P]>>  :
        P extends 'films_wishlist' ? Array < films_wishlistGetPayload<S['select'][P]>>  :
        P extends 'readings' ? Array < readingsGetPayload<S['select'][P]>>  :
        P extends 'tv_shows_wishlist' ? Array < tv_shows_wishlistGetPayload<S['select'][P]>>  :
        P extends 'watchings' ? Array < watchingsGetPayload<S['select'][P]>>  :
        P extends '_count' ? MediasCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof medias ? medias[P] : never
  } 
      : medias


  type mediasCountArgs = 
    Omit<mediasFindManyArgs, 'select' | 'include'> & {
      select?: MediasCountAggregateInputType | true
    }

  export interface mediasDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Medias that matches the filter.
     * @param {mediasFindUniqueArgs} args - Arguments to find a Medias
     * @example
     * // Get one Medias
     * const medias = await prisma.medias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends mediasFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, mediasFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'medias'> extends True ? Prisma__mediasClient<mediasGetPayload<T>> : Prisma__mediasClient<mediasGetPayload<T> | null, null>

    /**
     * Find one Medias that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {mediasFindUniqueOrThrowArgs} args - Arguments to find a Medias
     * @example
     * // Get one Medias
     * const medias = await prisma.medias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends mediasFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, mediasFindUniqueOrThrowArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Find the first Medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediasFindFirstArgs} args - Arguments to find a Medias
     * @example
     * // Get one Medias
     * const medias = await prisma.medias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends mediasFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, mediasFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'medias'> extends True ? Prisma__mediasClient<mediasGetPayload<T>> : Prisma__mediasClient<mediasGetPayload<T> | null, null>

    /**
     * Find the first Medias that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediasFindFirstOrThrowArgs} args - Arguments to find a Medias
     * @example
     * // Get one Medias
     * const medias = await prisma.medias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends mediasFindFirstOrThrowArgs>(
      args?: SelectSubset<T, mediasFindFirstOrThrowArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Find zero or more Medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Medias
     * const medias = await prisma.medias.findMany()
     * 
     * // Get first 10 Medias
     * const medias = await prisma.medias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mediasWithIdOnly = await prisma.medias.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends mediasFindManyArgs>(
      args?: SelectSubset<T, mediasFindManyArgs>
    ): PrismaPromise<Array<mediasGetPayload<T>>>

    /**
     * Create a Medias.
     * @param {mediasCreateArgs} args - Arguments to create a Medias.
     * @example
     * // Create one Medias
     * const Medias = await prisma.medias.create({
     *   data: {
     *     // ... data to create a Medias
     *   }
     * })
     * 
    **/
    create<T extends mediasCreateArgs>(
      args: SelectSubset<T, mediasCreateArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Create many Medias.
     *     @param {mediasCreateManyArgs} args - Arguments to create many Medias.
     *     @example
     *     // Create many Medias
     *     const medias = await prisma.medias.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends mediasCreateManyArgs>(
      args?: SelectSubset<T, mediasCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Medias.
     * @param {mediasDeleteArgs} args - Arguments to delete one Medias.
     * @example
     * // Delete one Medias
     * const Medias = await prisma.medias.delete({
     *   where: {
     *     // ... filter to delete one Medias
     *   }
     * })
     * 
    **/
    delete<T extends mediasDeleteArgs>(
      args: SelectSubset<T, mediasDeleteArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Update one Medias.
     * @param {mediasUpdateArgs} args - Arguments to update one Medias.
     * @example
     * // Update one Medias
     * const medias = await prisma.medias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends mediasUpdateArgs>(
      args: SelectSubset<T, mediasUpdateArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Delete zero or more Medias.
     * @param {mediasDeleteManyArgs} args - Arguments to filter Medias to delete.
     * @example
     * // Delete a few Medias
     * const { count } = await prisma.medias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends mediasDeleteManyArgs>(
      args?: SelectSubset<T, mediasDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Medias
     * const medias = await prisma.medias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends mediasUpdateManyArgs>(
      args: SelectSubset<T, mediasUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Medias.
     * @param {mediasUpsertArgs} args - Arguments to update or create a Medias.
     * @example
     * // Update or create a Medias
     * const medias = await prisma.medias.upsert({
     *   create: {
     *     // ... data to create a Medias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Medias we want to update
     *   }
     * })
    **/
    upsert<T extends mediasUpsertArgs>(
      args: SelectSubset<T, mediasUpsertArgs>
    ): Prisma__mediasClient<mediasGetPayload<T>>

    /**
     * Count the number of Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mediasCountArgs} args - Arguments to filter Medias to count.
     * @example
     * // Count the number of Medias
     * const count = await prisma.medias.count({
     *   where: {
     *     // ... the filter for the Medias we want to count
     *   }
     * })
    **/
    count<T extends mediasCountArgs>(
      args?: Subset<T, mediasCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MediasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MediasAggregateArgs>(args: Subset<T, MediasAggregateArgs>): PrismaPromise<GetMediasAggregateType<T>>

    /**
     * Group by Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MediasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MediasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MediasGroupByArgs['orderBy'] }
        : { orderBy?: MediasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MediasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMediasGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for medias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__mediasClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    books_wishlist<T extends medias$books_wishlistArgs= {}>(args?: Subset<T, medias$books_wishlistArgs>): PrismaPromise<Array<books_wishlistGetPayload<T>>| Null>;

    films_wishlist<T extends medias$films_wishlistArgs= {}>(args?: Subset<T, medias$films_wishlistArgs>): PrismaPromise<Array<films_wishlistGetPayload<T>>| Null>;

    readings<T extends medias$readingsArgs= {}>(args?: Subset<T, medias$readingsArgs>): PrismaPromise<Array<readingsGetPayload<T>>| Null>;

    tv_shows_wishlist<T extends medias$tv_shows_wishlistArgs= {}>(args?: Subset<T, medias$tv_shows_wishlistArgs>): PrismaPromise<Array<tv_shows_wishlistGetPayload<T>>| Null>;

    watchings<T extends medias$watchingsArgs= {}>(args?: Subset<T, medias$watchingsArgs>): PrismaPromise<Array<watchingsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * medias base type for findUnique actions
   */
  export type mediasFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter, which medias to fetch.
     */
    where: mediasWhereUniqueInput
  }

  /**
   * medias findUnique
   */
  export interface mediasFindUniqueArgs extends mediasFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * medias findUniqueOrThrow
   */
  export type mediasFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter, which medias to fetch.
     */
    where: mediasWhereUniqueInput
  }


  /**
   * medias base type for findFirst actions
   */
  export type mediasFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter, which medias to fetch.
     */
    where?: mediasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of medias to fetch.
     */
    orderBy?: Enumerable<mediasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for medias.
     */
    cursor?: mediasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of medias.
     */
    distinct?: Enumerable<MediasScalarFieldEnum>
  }

  /**
   * medias findFirst
   */
  export interface mediasFindFirstArgs extends mediasFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * medias findFirstOrThrow
   */
  export type mediasFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter, which medias to fetch.
     */
    where?: mediasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of medias to fetch.
     */
    orderBy?: Enumerable<mediasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for medias.
     */
    cursor?: mediasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of medias.
     */
    distinct?: Enumerable<MediasScalarFieldEnum>
  }


  /**
   * medias findMany
   */
  export type mediasFindManyArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter, which medias to fetch.
     */
    where?: mediasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of medias to fetch.
     */
    orderBy?: Enumerable<mediasOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing medias.
     */
    cursor?: mediasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` medias.
     */
    skip?: number
    distinct?: Enumerable<MediasScalarFieldEnum>
  }


  /**
   * medias create
   */
  export type mediasCreateArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * The data needed to create a medias.
     */
    data: XOR<mediasCreateInput, mediasUncheckedCreateInput>
  }


  /**
   * medias createMany
   */
  export type mediasCreateManyArgs = {
    /**
     * The data used to create many medias.
     */
    data: Enumerable<mediasCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * medias update
   */
  export type mediasUpdateArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * The data needed to update a medias.
     */
    data: XOR<mediasUpdateInput, mediasUncheckedUpdateInput>
    /**
     * Choose, which medias to update.
     */
    where: mediasWhereUniqueInput
  }


  /**
   * medias updateMany
   */
  export type mediasUpdateManyArgs = {
    /**
     * The data used to update medias.
     */
    data: XOR<mediasUpdateManyMutationInput, mediasUncheckedUpdateManyInput>
    /**
     * Filter which medias to update
     */
    where?: mediasWhereInput
  }


  /**
   * medias upsert
   */
  export type mediasUpsertArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * The filter to search for the medias to update in case it exists.
     */
    where: mediasWhereUniqueInput
    /**
     * In case the medias found by the `where` argument doesn't exist, create a new medias with this data.
     */
    create: XOR<mediasCreateInput, mediasUncheckedCreateInput>
    /**
     * In case the medias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mediasUpdateInput, mediasUncheckedUpdateInput>
  }


  /**
   * medias delete
   */
  export type mediasDeleteArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
    /**
     * Filter which medias to delete.
     */
    where: mediasWhereUniqueInput
  }


  /**
   * medias deleteMany
   */
  export type mediasDeleteManyArgs = {
    /**
     * Filter which medias to delete
     */
    where?: mediasWhereInput
  }


  /**
   * medias.books_wishlist
   */
  export type medias$books_wishlistArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    where?: books_wishlistWhereInput
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    cursor?: books_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Books_wishlistScalarFieldEnum>
  }


  /**
   * medias.films_wishlist
   */
  export type medias$films_wishlistArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    where?: films_wishlistWhereInput
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    cursor?: films_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Films_wishlistScalarFieldEnum>
  }


  /**
   * medias.readings
   */
  export type medias$readingsArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    where?: readingsWhereInput
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    cursor?: readingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ReadingsScalarFieldEnum>
  }


  /**
   * medias.tv_shows_wishlist
   */
  export type medias$tv_shows_wishlistArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    where?: tv_shows_wishlistWhereInput
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    cursor?: tv_shows_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Tv_shows_wishlistScalarFieldEnum>
  }


  /**
   * medias.watchings
   */
  export type medias$watchingsArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    where?: watchingsWhereInput
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    cursor?: watchingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<WatchingsScalarFieldEnum>
  }


  /**
   * medias without action
   */
  export type mediasArgs = {
    /**
     * Select specific fields to fetch from the medias
     */
    select?: mediasSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: mediasInclude | null
  }



  /**
   * Model readings
   */


  export type AggregateReadings = {
    _count: ReadingsCountAggregateOutputType | null
    _avg: ReadingsAvgAggregateOutputType | null
    _sum: ReadingsSumAggregateOutputType | null
    _min: ReadingsMinAggregateOutputType | null
    _max: ReadingsMaxAggregateOutputType | null
  }

  export type ReadingsAvgAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    grade: Decimal | null
    page_count: number | null
  }

  export type ReadingsSumAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    grade: Decimal | null
    page_count: number | null
  }

  export type ReadingsMinAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    grade: Decimal | null
    review: string | null
    book_api_id: string | null
    title: string | null
    author: string | null
    description: string | null
    img: string | null
    page_count: number | null
    read_at: Date | null
  }

  export type ReadingsMaxAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    grade: Decimal | null
    review: string | null
    book_api_id: string | null
    title: string | null
    author: string | null
    description: string | null
    img: string | null
    page_count: number | null
    read_at: Date | null
  }

  export type ReadingsCountAggregateOutputType = {
    id: number
    medias_id: number
    user_id: number
    grade: number
    review: number
    book_api_id: number
    title: number
    author: number
    description: number
    img: number
    page_count: number
    read_at: number
    _all: number
  }


  export type ReadingsAvgAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    grade?: true
    page_count?: true
  }

  export type ReadingsSumAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    grade?: true
    page_count?: true
  }

  export type ReadingsMinAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    grade?: true
    review?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
    read_at?: true
  }

  export type ReadingsMaxAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    grade?: true
    review?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
    read_at?: true
  }

  export type ReadingsCountAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    grade?: true
    review?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
    read_at?: true
    _all?: true
  }

  export type ReadingsAggregateArgs = {
    /**
     * Filter which readings to aggregate.
     */
    where?: readingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of readings to fetch.
     */
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: readingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` readings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` readings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned readings
    **/
    _count?: true | ReadingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReadingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReadingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReadingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReadingsMaxAggregateInputType
  }

  export type GetReadingsAggregateType<T extends ReadingsAggregateArgs> = {
        [P in keyof T & keyof AggregateReadings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReadings[P]>
      : GetScalarType<T[P], AggregateReadings[P]>
  }




  export type ReadingsGroupByArgs = {
    where?: readingsWhereInput
    orderBy?: Enumerable<readingsOrderByWithAggregationInput>
    by: ReadingsScalarFieldEnum[]
    having?: readingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReadingsCountAggregateInputType | true
    _avg?: ReadingsAvgAggregateInputType
    _sum?: ReadingsSumAggregateInputType
    _min?: ReadingsMinAggregateInputType
    _max?: ReadingsMaxAggregateInputType
  }


  export type ReadingsGroupByOutputType = {
    id: number
    medias_id: number
    user_id: number
    grade: Decimal
    review: string | null
    book_api_id: string
    title: string
    author: string
    description: string | null
    img: string
    page_count: number
    read_at: Date
    _count: ReadingsCountAggregateOutputType | null
    _avg: ReadingsAvgAggregateOutputType | null
    _sum: ReadingsSumAggregateOutputType | null
    _min: ReadingsMinAggregateOutputType | null
    _max: ReadingsMaxAggregateOutputType | null
  }

  type GetReadingsGroupByPayload<T extends ReadingsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ReadingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReadingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReadingsGroupByOutputType[P]>
            : GetScalarType<T[P], ReadingsGroupByOutputType[P]>
        }
      >
    >


  export type readingsSelect = {
    id?: boolean
    medias_id?: boolean
    user_id?: boolean
    grade?: boolean
    review?: boolean
    book_api_id?: boolean
    title?: boolean
    author?: boolean
    description?: boolean
    img?: boolean
    page_count?: boolean
    read_at?: boolean
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }


  export type readingsInclude = {
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }

  export type readingsGetPayload<S extends boolean | null | undefined | readingsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? readings :
    S extends undefined ? never :
    S extends { include: any } & (readingsArgs | readingsFindManyArgs)
    ? readings  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'medias' ? mediasGetPayload<S['include'][P]> :
        P extends 'users' ? usersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (readingsArgs | readingsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'medias' ? mediasGetPayload<S['select'][P]> :
        P extends 'users' ? usersGetPayload<S['select'][P]> :  P extends keyof readings ? readings[P] : never
  } 
      : readings


  type readingsCountArgs = 
    Omit<readingsFindManyArgs, 'select' | 'include'> & {
      select?: ReadingsCountAggregateInputType | true
    }

  export interface readingsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Readings that matches the filter.
     * @param {readingsFindUniqueArgs} args - Arguments to find a Readings
     * @example
     * // Get one Readings
     * const readings = await prisma.readings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends readingsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, readingsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'readings'> extends True ? Prisma__readingsClient<readingsGetPayload<T>> : Prisma__readingsClient<readingsGetPayload<T> | null, null>

    /**
     * Find one Readings that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {readingsFindUniqueOrThrowArgs} args - Arguments to find a Readings
     * @example
     * // Get one Readings
     * const readings = await prisma.readings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends readingsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, readingsFindUniqueOrThrowArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Find the first Readings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {readingsFindFirstArgs} args - Arguments to find a Readings
     * @example
     * // Get one Readings
     * const readings = await prisma.readings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends readingsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, readingsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'readings'> extends True ? Prisma__readingsClient<readingsGetPayload<T>> : Prisma__readingsClient<readingsGetPayload<T> | null, null>

    /**
     * Find the first Readings that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {readingsFindFirstOrThrowArgs} args - Arguments to find a Readings
     * @example
     * // Get one Readings
     * const readings = await prisma.readings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends readingsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, readingsFindFirstOrThrowArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Find zero or more Readings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {readingsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Readings
     * const readings = await prisma.readings.findMany()
     * 
     * // Get first 10 Readings
     * const readings = await prisma.readings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const readingsWithIdOnly = await prisma.readings.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends readingsFindManyArgs>(
      args?: SelectSubset<T, readingsFindManyArgs>
    ): PrismaPromise<Array<readingsGetPayload<T>>>

    /**
     * Create a Readings.
     * @param {readingsCreateArgs} args - Arguments to create a Readings.
     * @example
     * // Create one Readings
     * const Readings = await prisma.readings.create({
     *   data: {
     *     // ... data to create a Readings
     *   }
     * })
     * 
    **/
    create<T extends readingsCreateArgs>(
      args: SelectSubset<T, readingsCreateArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Create many Readings.
     *     @param {readingsCreateManyArgs} args - Arguments to create many Readings.
     *     @example
     *     // Create many Readings
     *     const readings = await prisma.readings.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends readingsCreateManyArgs>(
      args?: SelectSubset<T, readingsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Readings.
     * @param {readingsDeleteArgs} args - Arguments to delete one Readings.
     * @example
     * // Delete one Readings
     * const Readings = await prisma.readings.delete({
     *   where: {
     *     // ... filter to delete one Readings
     *   }
     * })
     * 
    **/
    delete<T extends readingsDeleteArgs>(
      args: SelectSubset<T, readingsDeleteArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Update one Readings.
     * @param {readingsUpdateArgs} args - Arguments to update one Readings.
     * @example
     * // Update one Readings
     * const readings = await prisma.readings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends readingsUpdateArgs>(
      args: SelectSubset<T, readingsUpdateArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Delete zero or more Readings.
     * @param {readingsDeleteManyArgs} args - Arguments to filter Readings to delete.
     * @example
     * // Delete a few Readings
     * const { count } = await prisma.readings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends readingsDeleteManyArgs>(
      args?: SelectSubset<T, readingsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Readings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {readingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Readings
     * const readings = await prisma.readings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends readingsUpdateManyArgs>(
      args: SelectSubset<T, readingsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Readings.
     * @param {readingsUpsertArgs} args - Arguments to update or create a Readings.
     * @example
     * // Update or create a Readings
     * const readings = await prisma.readings.upsert({
     *   create: {
     *     // ... data to create a Readings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Readings we want to update
     *   }
     * })
    **/
    upsert<T extends readingsUpsertArgs>(
      args: SelectSubset<T, readingsUpsertArgs>
    ): Prisma__readingsClient<readingsGetPayload<T>>

    /**
     * Count the number of Readings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {readingsCountArgs} args - Arguments to filter Readings to count.
     * @example
     * // Count the number of Readings
     * const count = await prisma.readings.count({
     *   where: {
     *     // ... the filter for the Readings we want to count
     *   }
     * })
    **/
    count<T extends readingsCountArgs>(
      args?: Subset<T, readingsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReadingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Readings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReadingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReadingsAggregateArgs>(args: Subset<T, ReadingsAggregateArgs>): PrismaPromise<GetReadingsAggregateType<T>>

    /**
     * Group by Readings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReadingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReadingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReadingsGroupByArgs['orderBy'] }
        : { orderBy?: ReadingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReadingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReadingsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for readings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__readingsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    medias<T extends mediasArgs= {}>(args?: Subset<T, mediasArgs>): Prisma__mediasClient<mediasGetPayload<T> | Null>;

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * readings base type for findUnique actions
   */
  export type readingsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter, which readings to fetch.
     */
    where: readingsWhereUniqueInput
  }

  /**
   * readings findUnique
   */
  export interface readingsFindUniqueArgs extends readingsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * readings findUniqueOrThrow
   */
  export type readingsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter, which readings to fetch.
     */
    where: readingsWhereUniqueInput
  }


  /**
   * readings base type for findFirst actions
   */
  export type readingsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter, which readings to fetch.
     */
    where?: readingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of readings to fetch.
     */
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for readings.
     */
    cursor?: readingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` readings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` readings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of readings.
     */
    distinct?: Enumerable<ReadingsScalarFieldEnum>
  }

  /**
   * readings findFirst
   */
  export interface readingsFindFirstArgs extends readingsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * readings findFirstOrThrow
   */
  export type readingsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter, which readings to fetch.
     */
    where?: readingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of readings to fetch.
     */
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for readings.
     */
    cursor?: readingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` readings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` readings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of readings.
     */
    distinct?: Enumerable<ReadingsScalarFieldEnum>
  }


  /**
   * readings findMany
   */
  export type readingsFindManyArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter, which readings to fetch.
     */
    where?: readingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of readings to fetch.
     */
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing readings.
     */
    cursor?: readingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` readings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` readings.
     */
    skip?: number
    distinct?: Enumerable<ReadingsScalarFieldEnum>
  }


  /**
   * readings create
   */
  export type readingsCreateArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * The data needed to create a readings.
     */
    data: XOR<readingsCreateInput, readingsUncheckedCreateInput>
  }


  /**
   * readings createMany
   */
  export type readingsCreateManyArgs = {
    /**
     * The data used to create many readings.
     */
    data: Enumerable<readingsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * readings update
   */
  export type readingsUpdateArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * The data needed to update a readings.
     */
    data: XOR<readingsUpdateInput, readingsUncheckedUpdateInput>
    /**
     * Choose, which readings to update.
     */
    where: readingsWhereUniqueInput
  }


  /**
   * readings updateMany
   */
  export type readingsUpdateManyArgs = {
    /**
     * The data used to update readings.
     */
    data: XOR<readingsUpdateManyMutationInput, readingsUncheckedUpdateManyInput>
    /**
     * Filter which readings to update
     */
    where?: readingsWhereInput
  }


  /**
   * readings upsert
   */
  export type readingsUpsertArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * The filter to search for the readings to update in case it exists.
     */
    where: readingsWhereUniqueInput
    /**
     * In case the readings found by the `where` argument doesn't exist, create a new readings with this data.
     */
    create: XOR<readingsCreateInput, readingsUncheckedCreateInput>
    /**
     * In case the readings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<readingsUpdateInput, readingsUncheckedUpdateInput>
  }


  /**
   * readings delete
   */
  export type readingsDeleteArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    /**
     * Filter which readings to delete.
     */
    where: readingsWhereUniqueInput
  }


  /**
   * readings deleteMany
   */
  export type readingsDeleteManyArgs = {
    /**
     * Filter which readings to delete
     */
    where?: readingsWhereInput
  }


  /**
   * readings without action
   */
  export type readingsArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
  }



  /**
   * Model sessions
   */


  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _avg: SessionsAvgAggregateOutputType | null
    _sum: SessionsSumAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type SessionsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type SessionsMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    active: boolean | null
  }

  export type SessionsMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    active: boolean | null
  }

  export type SessionsCountAggregateOutputType = {
    id: number
    user_id: number
    token: number
    created_at: number
    updated_at: number
    active: number
    _all: number
  }


  export type SessionsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type SessionsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type SessionsMinAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    active?: true
  }

  export type SessionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    active?: true
  }

  export type SessionsCountAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    active?: true
    _all?: true
  }

  export type SessionsAggregateArgs = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: Enumerable<sessionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type SessionsGroupByArgs = {
    where?: sessionsWhereInput
    orderBy?: Enumerable<sessionsOrderByWithAggregationInput>
    by: SessionsScalarFieldEnum[]
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _avg?: SessionsAvgAggregateInputType
    _sum?: SessionsSumAggregateInputType
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }


  export type SessionsGroupByOutputType = {
    id: number
    user_id: number
    token: string
    created_at: Date
    updated_at: Date | null
    active: boolean
    _count: SessionsCountAggregateOutputType | null
    _avg: SessionsAvgAggregateOutputType | null
    _sum: SessionsSumAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends SessionsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect = {
    id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    updated_at?: boolean
    active?: boolean
    users?: boolean | usersArgs
  }


  export type sessionsInclude = {
    users?: boolean | usersArgs
  }

  export type sessionsGetPayload<S extends boolean | null | undefined | sessionsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? sessions :
    S extends undefined ? never :
    S extends { include: any } & (sessionsArgs | sessionsFindManyArgs)
    ? sessions  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (sessionsArgs | sessionsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<S['select'][P]> :  P extends keyof sessions ? sessions[P] : never
  } 
      : sessions


  type sessionsCountArgs = 
    Omit<sessionsFindManyArgs, 'select' | 'include'> & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends sessionsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, sessionsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'sessions'> extends True ? Prisma__sessionsClient<sessionsGetPayload<T>> : Prisma__sessionsClient<sessionsGetPayload<T> | null, null>

    /**
     * Find one Sessions that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, sessionsFindUniqueOrThrowArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends sessionsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, sessionsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'sessions'> extends True ? Prisma__sessionsClient<sessionsGetPayload<T>> : Prisma__sessionsClient<sessionsGetPayload<T> | null, null>

    /**
     * Find the first Sessions that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, sessionsFindFirstOrThrowArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionsWithIdOnly = await prisma.sessions.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends sessionsFindManyArgs>(
      args?: SelectSubset<T, sessionsFindManyArgs>
    ): PrismaPromise<Array<sessionsGetPayload<T>>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
    **/
    create<T extends sessionsCreateArgs>(
      args: SelectSubset<T, sessionsCreateArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Create many Sessions.
     *     @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     *     @example
     *     // Create many Sessions
     *     const sessions = await prisma.sessions.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends sessionsCreateManyArgs>(
      args?: SelectSubset<T, sessionsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
    **/
    delete<T extends sessionsDeleteArgs>(
      args: SelectSubset<T, sessionsDeleteArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends sessionsUpdateArgs>(
      args: SelectSubset<T, sessionsUpdateArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends sessionsDeleteManyArgs>(
      args?: SelectSubset<T, sessionsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends sessionsUpdateManyArgs>(
      args: SelectSubset<T, sessionsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
    **/
    upsert<T extends sessionsUpsertArgs>(
      args: SelectSubset<T, sessionsUpsertArgs>
    ): Prisma__sessionsClient<sessionsGetPayload<T>>

    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionsGroupByArgs['orderBy'] }
        : { orderBy?: SessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__sessionsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * sessions base type for findUnique actions
   */
  export type sessionsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findUnique
   */
  export interface sessionsFindUniqueArgs extends sessionsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions base type for findFirst actions
   */
  export type sessionsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: Enumerable<sessionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: Enumerable<SessionsScalarFieldEnum>
  }

  /**
   * sessions findFirst
   */
  export interface sessionsFindFirstArgs extends sessionsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: Enumerable<sessionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: Enumerable<SessionsScalarFieldEnum>
  }


  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: Enumerable<sessionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: Enumerable<SessionsScalarFieldEnum>
  }


  /**
   * sessions create
   */
  export type sessionsCreateArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }


  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs = {
    /**
     * The data used to create many sessions.
     */
    data: Enumerable<sessionsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * sessions update
   */
  export type sessionsUpdateArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
  }


  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }


  /**
   * sessions delete
   */
  export type sessionsDeleteArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }


  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
  }


  /**
   * sessions without action
   */
  export type sessionsArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
  }



  /**
   * Model users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    email: number
    password: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: usersWhereInput
    orderBy?: Enumerable<usersOrderByWithAggregationInput>
    by: UsersScalarFieldEnum[]
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    id: number
    email: string
    password: string
    created_at: Date
    updated_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect = {
    id?: boolean
    email?: boolean
    password?: boolean
    created_at?: boolean
    updated_at?: boolean
    books_wishlist?: boolean | users$books_wishlistArgs
    films_wishlist?: boolean | users$films_wishlistArgs
    readings?: boolean | users$readingsArgs
    sessions?: boolean | users$sessionsArgs
    tv_shows_wishlist?: boolean | users$tv_shows_wishlistArgs
    watchings?: boolean | users$watchingsArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }


  export type usersInclude = {
    books_wishlist?: boolean | users$books_wishlistArgs
    films_wishlist?: boolean | users$films_wishlistArgs
    readings?: boolean | users$readingsArgs
    sessions?: boolean | users$sessionsArgs
    tv_shows_wishlist?: boolean | users$tv_shows_wishlistArgs
    watchings?: boolean | users$watchingsArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type usersGetPayload<S extends boolean | null | undefined | usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? users :
    S extends undefined ? never :
    S extends { include: any } & (usersArgs | usersFindManyArgs)
    ? users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'books_wishlist' ? Array < books_wishlistGetPayload<S['include'][P]>>  :
        P extends 'films_wishlist' ? Array < films_wishlistGetPayload<S['include'][P]>>  :
        P extends 'readings' ? Array < readingsGetPayload<S['include'][P]>>  :
        P extends 'sessions' ? Array < sessionsGetPayload<S['include'][P]>>  :
        P extends 'tv_shows_wishlist' ? Array < tv_shows_wishlistGetPayload<S['include'][P]>>  :
        P extends 'watchings' ? Array < watchingsGetPayload<S['include'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (usersArgs | usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'books_wishlist' ? Array < books_wishlistGetPayload<S['select'][P]>>  :
        P extends 'films_wishlist' ? Array < films_wishlistGetPayload<S['select'][P]>>  :
        P extends 'readings' ? Array < readingsGetPayload<S['select'][P]>>  :
        P extends 'sessions' ? Array < sessionsGetPayload<S['select'][P]>>  :
        P extends 'tv_shows_wishlist' ? Array < tv_shows_wishlistGetPayload<S['select'][P]>>  :
        P extends 'watchings' ? Array < watchingsGetPayload<S['select'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof users ? users[P] : never
  } 
      : users


  type usersCountArgs = 
    Omit<usersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'users'> extends True ? Prisma__usersClient<usersGetPayload<T>> : Prisma__usersClient<usersGetPayload<T> | null, null>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'users'> extends True ? Prisma__usersClient<usersGetPayload<T>> : Prisma__usersClient<usersGetPayload<T> | null, null>

    /**
     * Find the first Users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs>(
      args?: SelectSubset<T, usersFindManyArgs>
    ): PrismaPromise<Array<usersGetPayload<T>>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs>(
      args: SelectSubset<T, usersCreateArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs>(
      args?: SelectSubset<T, usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs>(
      args: SelectSubset<T, usersDeleteArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs>(
      args: SelectSubset<T, usersUpdateArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs>(
      args?: SelectSubset<T, usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs>(
      args: SelectSubset<T, usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs>(
      args: SelectSubset<T, usersUpsertArgs>
    ): Prisma__usersClient<usersGetPayload<T>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__usersClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    books_wishlist<T extends users$books_wishlistArgs= {}>(args?: Subset<T, users$books_wishlistArgs>): PrismaPromise<Array<books_wishlistGetPayload<T>>| Null>;

    films_wishlist<T extends users$films_wishlistArgs= {}>(args?: Subset<T, users$films_wishlistArgs>): PrismaPromise<Array<films_wishlistGetPayload<T>>| Null>;

    readings<T extends users$readingsArgs= {}>(args?: Subset<T, users$readingsArgs>): PrismaPromise<Array<readingsGetPayload<T>>| Null>;

    sessions<T extends users$sessionsArgs= {}>(args?: Subset<T, users$sessionsArgs>): PrismaPromise<Array<sessionsGetPayload<T>>| Null>;

    tv_shows_wishlist<T extends users$tv_shows_wishlistArgs= {}>(args?: Subset<T, users$tv_shows_wishlistArgs>): PrismaPromise<Array<tv_shows_wishlistGetPayload<T>>| Null>;

    watchings<T extends users$watchingsArgs= {}>(args?: Subset<T, users$watchingsArgs>): PrismaPromise<Array<watchingsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * users base type for findUnique actions
   */
  export type usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUnique
   */
  export interface usersFindUniqueArgs extends usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users base type for findFirst actions
   */
  export type usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: Enumerable<UsersScalarFieldEnum>
  }

  /**
   * users findFirst
   */
  export interface usersFindFirstArgs extends usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: Enumerable<usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * users create
   */
  export type usersCreateArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs = {
    /**
     * The data used to create many users.
     */
    data: Enumerable<usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users.books_wishlist
   */
  export type users$books_wishlistArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    where?: books_wishlistWhereInput
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    cursor?: books_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Books_wishlistScalarFieldEnum>
  }


  /**
   * users.films_wishlist
   */
  export type users$films_wishlistArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    where?: films_wishlistWhereInput
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    cursor?: films_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Films_wishlistScalarFieldEnum>
  }


  /**
   * users.readings
   */
  export type users$readingsArgs = {
    /**
     * Select specific fields to fetch from the readings
     */
    select?: readingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: readingsInclude | null
    where?: readingsWhereInput
    orderBy?: Enumerable<readingsOrderByWithRelationInput>
    cursor?: readingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ReadingsScalarFieldEnum>
  }


  /**
   * users.sessions
   */
  export type users$sessionsArgs = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: sessionsInclude | null
    where?: sessionsWhereInput
    orderBy?: Enumerable<sessionsOrderByWithRelationInput>
    cursor?: sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SessionsScalarFieldEnum>
  }


  /**
   * users.tv_shows_wishlist
   */
  export type users$tv_shows_wishlistArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    where?: tv_shows_wishlistWhereInput
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    cursor?: tv_shows_wishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Tv_shows_wishlistScalarFieldEnum>
  }


  /**
   * users.watchings
   */
  export type users$watchingsArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    where?: watchingsWhereInput
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    cursor?: watchingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<WatchingsScalarFieldEnum>
  }


  /**
   * users without action
   */
  export type usersArgs = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude | null
  }



  /**
   * Model books_wishlist
   */


  export type AggregateBooks_wishlist = {
    _count: Books_wishlistCountAggregateOutputType | null
    _avg: Books_wishlistAvgAggregateOutputType | null
    _sum: Books_wishlistSumAggregateOutputType | null
    _min: Books_wishlistMinAggregateOutputType | null
    _max: Books_wishlistMaxAggregateOutputType | null
  }

  export type Books_wishlistAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    medias_id: number | null
    page_count: number | null
  }

  export type Books_wishlistSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    medias_id: number | null
    page_count: number | null
  }

  export type Books_wishlistMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    medias_id: number | null
    created_at: Date | null
    updated_at: Date | null
    book_api_id: string | null
    title: string | null
    author: string | null
    description: string | null
    img: string | null
    page_count: number | null
  }

  export type Books_wishlistMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    medias_id: number | null
    created_at: Date | null
    updated_at: Date | null
    book_api_id: string | null
    title: string | null
    author: string | null
    description: string | null
    img: string | null
    page_count: number | null
  }

  export type Books_wishlistCountAggregateOutputType = {
    id: number
    user_id: number
    medias_id: number
    created_at: number
    updated_at: number
    book_api_id: number
    title: number
    author: number
    description: number
    img: number
    page_count: number
    _all: number
  }


  export type Books_wishlistAvgAggregateInputType = {
    id?: true
    user_id?: true
    medias_id?: true
    page_count?: true
  }

  export type Books_wishlistSumAggregateInputType = {
    id?: true
    user_id?: true
    medias_id?: true
    page_count?: true
  }

  export type Books_wishlistMinAggregateInputType = {
    id?: true
    user_id?: true
    medias_id?: true
    created_at?: true
    updated_at?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
  }

  export type Books_wishlistMaxAggregateInputType = {
    id?: true
    user_id?: true
    medias_id?: true
    created_at?: true
    updated_at?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
  }

  export type Books_wishlistCountAggregateInputType = {
    id?: true
    user_id?: true
    medias_id?: true
    created_at?: true
    updated_at?: true
    book_api_id?: true
    title?: true
    author?: true
    description?: true
    img?: true
    page_count?: true
    _all?: true
  }

  export type Books_wishlistAggregateArgs = {
    /**
     * Filter which books_wishlist to aggregate.
     */
    where?: books_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books_wishlists to fetch.
     */
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: books_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned books_wishlists
    **/
    _count?: true | Books_wishlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Books_wishlistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Books_wishlistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Books_wishlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Books_wishlistMaxAggregateInputType
  }

  export type GetBooks_wishlistAggregateType<T extends Books_wishlistAggregateArgs> = {
        [P in keyof T & keyof AggregateBooks_wishlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBooks_wishlist[P]>
      : GetScalarType<T[P], AggregateBooks_wishlist[P]>
  }




  export type Books_wishlistGroupByArgs = {
    where?: books_wishlistWhereInput
    orderBy?: Enumerable<books_wishlistOrderByWithAggregationInput>
    by: Books_wishlistScalarFieldEnum[]
    having?: books_wishlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Books_wishlistCountAggregateInputType | true
    _avg?: Books_wishlistAvgAggregateInputType
    _sum?: Books_wishlistSumAggregateInputType
    _min?: Books_wishlistMinAggregateInputType
    _max?: Books_wishlistMaxAggregateInputType
  }


  export type Books_wishlistGroupByOutputType = {
    id: number
    user_id: number
    medias_id: number
    created_at: Date
    updated_at: Date | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
    _count: Books_wishlistCountAggregateOutputType | null
    _avg: Books_wishlistAvgAggregateOutputType | null
    _sum: Books_wishlistSumAggregateOutputType | null
    _min: Books_wishlistMinAggregateOutputType | null
    _max: Books_wishlistMaxAggregateOutputType | null
  }

  type GetBooks_wishlistGroupByPayload<T extends Books_wishlistGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Books_wishlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Books_wishlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Books_wishlistGroupByOutputType[P]>
            : GetScalarType<T[P], Books_wishlistGroupByOutputType[P]>
        }
      >
    >


  export type books_wishlistSelect = {
    id?: boolean
    user_id?: boolean
    medias_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    book_api_id?: boolean
    title?: boolean
    author?: boolean
    description?: boolean
    img?: boolean
    page_count?: boolean
    users?: boolean | usersArgs
    medias?: boolean | mediasArgs
  }


  export type books_wishlistInclude = {
    users?: boolean | usersArgs
    medias?: boolean | mediasArgs
  }

  export type books_wishlistGetPayload<S extends boolean | null | undefined | books_wishlistArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? books_wishlist :
    S extends undefined ? never :
    S extends { include: any } & (books_wishlistArgs | books_wishlistFindManyArgs)
    ? books_wishlist  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'users' ? usersGetPayload<S['include'][P]> :
        P extends 'medias' ? mediasGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (books_wishlistArgs | books_wishlistFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'users' ? usersGetPayload<S['select'][P]> :
        P extends 'medias' ? mediasGetPayload<S['select'][P]> :  P extends keyof books_wishlist ? books_wishlist[P] : never
  } 
      : books_wishlist


  type books_wishlistCountArgs = 
    Omit<books_wishlistFindManyArgs, 'select' | 'include'> & {
      select?: Books_wishlistCountAggregateInputType | true
    }

  export interface books_wishlistDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Books_wishlist that matches the filter.
     * @param {books_wishlistFindUniqueArgs} args - Arguments to find a Books_wishlist
     * @example
     * // Get one Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends books_wishlistFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, books_wishlistFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'books_wishlist'> extends True ? Prisma__books_wishlistClient<books_wishlistGetPayload<T>> : Prisma__books_wishlistClient<books_wishlistGetPayload<T> | null, null>

    /**
     * Find one Books_wishlist that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {books_wishlistFindUniqueOrThrowArgs} args - Arguments to find a Books_wishlist
     * @example
     * // Get one Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends books_wishlistFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, books_wishlistFindUniqueOrThrowArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Find the first Books_wishlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {books_wishlistFindFirstArgs} args - Arguments to find a Books_wishlist
     * @example
     * // Get one Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends books_wishlistFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, books_wishlistFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'books_wishlist'> extends True ? Prisma__books_wishlistClient<books_wishlistGetPayload<T>> : Prisma__books_wishlistClient<books_wishlistGetPayload<T> | null, null>

    /**
     * Find the first Books_wishlist that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {books_wishlistFindFirstOrThrowArgs} args - Arguments to find a Books_wishlist
     * @example
     * // Get one Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends books_wishlistFindFirstOrThrowArgs>(
      args?: SelectSubset<T, books_wishlistFindFirstOrThrowArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Find zero or more Books_wishlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {books_wishlistFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Books_wishlists
     * const books_wishlists = await prisma.books_wishlist.findMany()
     * 
     * // Get first 10 Books_wishlists
     * const books_wishlists = await prisma.books_wishlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const books_wishlistWithIdOnly = await prisma.books_wishlist.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends books_wishlistFindManyArgs>(
      args?: SelectSubset<T, books_wishlistFindManyArgs>
    ): PrismaPromise<Array<books_wishlistGetPayload<T>>>

    /**
     * Create a Books_wishlist.
     * @param {books_wishlistCreateArgs} args - Arguments to create a Books_wishlist.
     * @example
     * // Create one Books_wishlist
     * const Books_wishlist = await prisma.books_wishlist.create({
     *   data: {
     *     // ... data to create a Books_wishlist
     *   }
     * })
     * 
    **/
    create<T extends books_wishlistCreateArgs>(
      args: SelectSubset<T, books_wishlistCreateArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Create many Books_wishlists.
     *     @param {books_wishlistCreateManyArgs} args - Arguments to create many Books_wishlists.
     *     @example
     *     // Create many Books_wishlists
     *     const books_wishlist = await prisma.books_wishlist.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends books_wishlistCreateManyArgs>(
      args?: SelectSubset<T, books_wishlistCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Books_wishlist.
     * @param {books_wishlistDeleteArgs} args - Arguments to delete one Books_wishlist.
     * @example
     * // Delete one Books_wishlist
     * const Books_wishlist = await prisma.books_wishlist.delete({
     *   where: {
     *     // ... filter to delete one Books_wishlist
     *   }
     * })
     * 
    **/
    delete<T extends books_wishlistDeleteArgs>(
      args: SelectSubset<T, books_wishlistDeleteArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Update one Books_wishlist.
     * @param {books_wishlistUpdateArgs} args - Arguments to update one Books_wishlist.
     * @example
     * // Update one Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends books_wishlistUpdateArgs>(
      args: SelectSubset<T, books_wishlistUpdateArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Delete zero or more Books_wishlists.
     * @param {books_wishlistDeleteManyArgs} args - Arguments to filter Books_wishlists to delete.
     * @example
     * // Delete a few Books_wishlists
     * const { count } = await prisma.books_wishlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends books_wishlistDeleteManyArgs>(
      args?: SelectSubset<T, books_wishlistDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Books_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {books_wishlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Books_wishlists
     * const books_wishlist = await prisma.books_wishlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends books_wishlistUpdateManyArgs>(
      args: SelectSubset<T, books_wishlistUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Books_wishlist.
     * @param {books_wishlistUpsertArgs} args - Arguments to update or create a Books_wishlist.
     * @example
     * // Update or create a Books_wishlist
     * const books_wishlist = await prisma.books_wishlist.upsert({
     *   create: {
     *     // ... data to create a Books_wishlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Books_wishlist we want to update
     *   }
     * })
    **/
    upsert<T extends books_wishlistUpsertArgs>(
      args: SelectSubset<T, books_wishlistUpsertArgs>
    ): Prisma__books_wishlistClient<books_wishlistGetPayload<T>>

    /**
     * Count the number of Books_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {books_wishlistCountArgs} args - Arguments to filter Books_wishlists to count.
     * @example
     * // Count the number of Books_wishlists
     * const count = await prisma.books_wishlist.count({
     *   where: {
     *     // ... the filter for the Books_wishlists we want to count
     *   }
     * })
    **/
    count<T extends books_wishlistCountArgs>(
      args?: Subset<T, books_wishlistCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Books_wishlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Books_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Books_wishlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Books_wishlistAggregateArgs>(args: Subset<T, Books_wishlistAggregateArgs>): PrismaPromise<GetBooks_wishlistAggregateType<T>>

    /**
     * Group by Books_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Books_wishlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Books_wishlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Books_wishlistGroupByArgs['orderBy'] }
        : { orderBy?: Books_wishlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Books_wishlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBooks_wishlistGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for books_wishlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__books_wishlistClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    medias<T extends mediasArgs= {}>(args?: Subset<T, mediasArgs>): Prisma__mediasClient<mediasGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * books_wishlist base type for findUnique actions
   */
  export type books_wishlistFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter, which books_wishlist to fetch.
     */
    where: books_wishlistWhereUniqueInput
  }

  /**
   * books_wishlist findUnique
   */
  export interface books_wishlistFindUniqueArgs extends books_wishlistFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * books_wishlist findUniqueOrThrow
   */
  export type books_wishlistFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter, which books_wishlist to fetch.
     */
    where: books_wishlistWhereUniqueInput
  }


  /**
   * books_wishlist base type for findFirst actions
   */
  export type books_wishlistFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter, which books_wishlist to fetch.
     */
    where?: books_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books_wishlists to fetch.
     */
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for books_wishlists.
     */
    cursor?: books_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of books_wishlists.
     */
    distinct?: Enumerable<Books_wishlistScalarFieldEnum>
  }

  /**
   * books_wishlist findFirst
   */
  export interface books_wishlistFindFirstArgs extends books_wishlistFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * books_wishlist findFirstOrThrow
   */
  export type books_wishlistFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter, which books_wishlist to fetch.
     */
    where?: books_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books_wishlists to fetch.
     */
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for books_wishlists.
     */
    cursor?: books_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of books_wishlists.
     */
    distinct?: Enumerable<Books_wishlistScalarFieldEnum>
  }


  /**
   * books_wishlist findMany
   */
  export type books_wishlistFindManyArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter, which books_wishlists to fetch.
     */
    where?: books_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books_wishlists to fetch.
     */
    orderBy?: Enumerable<books_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing books_wishlists.
     */
    cursor?: books_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books_wishlists.
     */
    skip?: number
    distinct?: Enumerable<Books_wishlistScalarFieldEnum>
  }


  /**
   * books_wishlist create
   */
  export type books_wishlistCreateArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * The data needed to create a books_wishlist.
     */
    data: XOR<books_wishlistCreateInput, books_wishlistUncheckedCreateInput>
  }


  /**
   * books_wishlist createMany
   */
  export type books_wishlistCreateManyArgs = {
    /**
     * The data used to create many books_wishlists.
     */
    data: Enumerable<books_wishlistCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * books_wishlist update
   */
  export type books_wishlistUpdateArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * The data needed to update a books_wishlist.
     */
    data: XOR<books_wishlistUpdateInput, books_wishlistUncheckedUpdateInput>
    /**
     * Choose, which books_wishlist to update.
     */
    where: books_wishlistWhereUniqueInput
  }


  /**
   * books_wishlist updateMany
   */
  export type books_wishlistUpdateManyArgs = {
    /**
     * The data used to update books_wishlists.
     */
    data: XOR<books_wishlistUpdateManyMutationInput, books_wishlistUncheckedUpdateManyInput>
    /**
     * Filter which books_wishlists to update
     */
    where?: books_wishlistWhereInput
  }


  /**
   * books_wishlist upsert
   */
  export type books_wishlistUpsertArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * The filter to search for the books_wishlist to update in case it exists.
     */
    where: books_wishlistWhereUniqueInput
    /**
     * In case the books_wishlist found by the `where` argument doesn't exist, create a new books_wishlist with this data.
     */
    create: XOR<books_wishlistCreateInput, books_wishlistUncheckedCreateInput>
    /**
     * In case the books_wishlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<books_wishlistUpdateInput, books_wishlistUncheckedUpdateInput>
  }


  /**
   * books_wishlist delete
   */
  export type books_wishlistDeleteArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
    /**
     * Filter which books_wishlist to delete.
     */
    where: books_wishlistWhereUniqueInput
  }


  /**
   * books_wishlist deleteMany
   */
  export type books_wishlistDeleteManyArgs = {
    /**
     * Filter which books_wishlists to delete
     */
    where?: books_wishlistWhereInput
  }


  /**
   * books_wishlist without action
   */
  export type books_wishlistArgs = {
    /**
     * Select specific fields to fetch from the books_wishlist
     */
    select?: books_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: books_wishlistInclude | null
  }



  /**
   * Model films_wishlist
   */


  export type AggregateFilms_wishlist = {
    _count: Films_wishlistCountAggregateOutputType | null
    _avg: Films_wishlistAvgAggregateOutputType | null
    _sum: Films_wishlistSumAggregateOutputType | null
    _min: Films_wishlistMinAggregateOutputType | null
    _max: Films_wishlistMaxAggregateOutputType | null
  }

  export type Films_wishlistAvgAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    runtime: number | null
    vote_average: number | null
  }

  export type Films_wishlistSumAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    runtime: number | null
    vote_average: number | null
  }

  export type Films_wishlistMinAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    tagline: string | null
    runtime: number | null
    created_at: Date | null
    img: string | null
    vote_average: number | null
    overview: string | null
  }

  export type Films_wishlistMaxAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    tagline: string | null
    runtime: number | null
    created_at: Date | null
    img: string | null
    vote_average: number | null
    overview: string | null
  }

  export type Films_wishlistCountAggregateOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: number
    title: number
    tagline: number
    runtime: number
    created_at: number
    img: number
    vote_average: number
    overview: number
    _all: number
  }


  export type Films_wishlistAvgAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    runtime?: true
    vote_average?: true
  }

  export type Films_wishlistSumAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    runtime?: true
    vote_average?: true
  }

  export type Films_wishlistMinAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    tagline?: true
    runtime?: true
    created_at?: true
    img?: true
    vote_average?: true
    overview?: true
  }

  export type Films_wishlistMaxAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    tagline?: true
    runtime?: true
    created_at?: true
    img?: true
    vote_average?: true
    overview?: true
  }

  export type Films_wishlistCountAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    tagline?: true
    runtime?: true
    created_at?: true
    img?: true
    vote_average?: true
    overview?: true
    _all?: true
  }

  export type Films_wishlistAggregateArgs = {
    /**
     * Filter which films_wishlist to aggregate.
     */
    where?: films_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of films_wishlists to fetch.
     */
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: films_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` films_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` films_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned films_wishlists
    **/
    _count?: true | Films_wishlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Films_wishlistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Films_wishlistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Films_wishlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Films_wishlistMaxAggregateInputType
  }

  export type GetFilms_wishlistAggregateType<T extends Films_wishlistAggregateArgs> = {
        [P in keyof T & keyof AggregateFilms_wishlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFilms_wishlist[P]>
      : GetScalarType<T[P], AggregateFilms_wishlist[P]>
  }




  export type Films_wishlistGroupByArgs = {
    where?: films_wishlistWhereInput
    orderBy?: Enumerable<films_wishlistOrderByWithAggregationInput>
    by: Films_wishlistScalarFieldEnum[]
    having?: films_wishlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Films_wishlistCountAggregateInputType | true
    _avg?: Films_wishlistAvgAggregateInputType
    _sum?: Films_wishlistSumAggregateInputType
    _min?: Films_wishlistMinAggregateInputType
    _max?: Films_wishlistMaxAggregateInputType
  }


  export type Films_wishlistGroupByOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at: Date
    img: string
    vote_average: number
    overview: string
    _count: Films_wishlistCountAggregateOutputType | null
    _avg: Films_wishlistAvgAggregateOutputType | null
    _sum: Films_wishlistSumAggregateOutputType | null
    _min: Films_wishlistMinAggregateOutputType | null
    _max: Films_wishlistMaxAggregateOutputType | null
  }

  type GetFilms_wishlistGroupByPayload<T extends Films_wishlistGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Films_wishlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Films_wishlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Films_wishlistGroupByOutputType[P]>
            : GetScalarType<T[P], Films_wishlistGroupByOutputType[P]>
        }
      >
    >


  export type films_wishlistSelect = {
    id?: boolean
    medias_id?: boolean
    user_id?: boolean
    api_id?: boolean
    title?: boolean
    tagline?: boolean
    runtime?: boolean
    created_at?: boolean
    img?: boolean
    vote_average?: boolean
    overview?: boolean
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }


  export type films_wishlistInclude = {
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }

  export type films_wishlistGetPayload<S extends boolean | null | undefined | films_wishlistArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? films_wishlist :
    S extends undefined ? never :
    S extends { include: any } & (films_wishlistArgs | films_wishlistFindManyArgs)
    ? films_wishlist  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'medias' ? mediasGetPayload<S['include'][P]> :
        P extends 'users' ? usersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (films_wishlistArgs | films_wishlistFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'medias' ? mediasGetPayload<S['select'][P]> :
        P extends 'users' ? usersGetPayload<S['select'][P]> :  P extends keyof films_wishlist ? films_wishlist[P] : never
  } 
      : films_wishlist


  type films_wishlistCountArgs = 
    Omit<films_wishlistFindManyArgs, 'select' | 'include'> & {
      select?: Films_wishlistCountAggregateInputType | true
    }

  export interface films_wishlistDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Films_wishlist that matches the filter.
     * @param {films_wishlistFindUniqueArgs} args - Arguments to find a Films_wishlist
     * @example
     * // Get one Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends films_wishlistFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, films_wishlistFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'films_wishlist'> extends True ? Prisma__films_wishlistClient<films_wishlistGetPayload<T>> : Prisma__films_wishlistClient<films_wishlistGetPayload<T> | null, null>

    /**
     * Find one Films_wishlist that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {films_wishlistFindUniqueOrThrowArgs} args - Arguments to find a Films_wishlist
     * @example
     * // Get one Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends films_wishlistFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, films_wishlistFindUniqueOrThrowArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Find the first Films_wishlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {films_wishlistFindFirstArgs} args - Arguments to find a Films_wishlist
     * @example
     * // Get one Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends films_wishlistFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, films_wishlistFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'films_wishlist'> extends True ? Prisma__films_wishlistClient<films_wishlistGetPayload<T>> : Prisma__films_wishlistClient<films_wishlistGetPayload<T> | null, null>

    /**
     * Find the first Films_wishlist that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {films_wishlistFindFirstOrThrowArgs} args - Arguments to find a Films_wishlist
     * @example
     * // Get one Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends films_wishlistFindFirstOrThrowArgs>(
      args?: SelectSubset<T, films_wishlistFindFirstOrThrowArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Find zero or more Films_wishlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {films_wishlistFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Films_wishlists
     * const films_wishlists = await prisma.films_wishlist.findMany()
     * 
     * // Get first 10 Films_wishlists
     * const films_wishlists = await prisma.films_wishlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const films_wishlistWithIdOnly = await prisma.films_wishlist.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends films_wishlistFindManyArgs>(
      args?: SelectSubset<T, films_wishlistFindManyArgs>
    ): PrismaPromise<Array<films_wishlistGetPayload<T>>>

    /**
     * Create a Films_wishlist.
     * @param {films_wishlistCreateArgs} args - Arguments to create a Films_wishlist.
     * @example
     * // Create one Films_wishlist
     * const Films_wishlist = await prisma.films_wishlist.create({
     *   data: {
     *     // ... data to create a Films_wishlist
     *   }
     * })
     * 
    **/
    create<T extends films_wishlistCreateArgs>(
      args: SelectSubset<T, films_wishlistCreateArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Create many Films_wishlists.
     *     @param {films_wishlistCreateManyArgs} args - Arguments to create many Films_wishlists.
     *     @example
     *     // Create many Films_wishlists
     *     const films_wishlist = await prisma.films_wishlist.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends films_wishlistCreateManyArgs>(
      args?: SelectSubset<T, films_wishlistCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Films_wishlist.
     * @param {films_wishlistDeleteArgs} args - Arguments to delete one Films_wishlist.
     * @example
     * // Delete one Films_wishlist
     * const Films_wishlist = await prisma.films_wishlist.delete({
     *   where: {
     *     // ... filter to delete one Films_wishlist
     *   }
     * })
     * 
    **/
    delete<T extends films_wishlistDeleteArgs>(
      args: SelectSubset<T, films_wishlistDeleteArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Update one Films_wishlist.
     * @param {films_wishlistUpdateArgs} args - Arguments to update one Films_wishlist.
     * @example
     * // Update one Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends films_wishlistUpdateArgs>(
      args: SelectSubset<T, films_wishlistUpdateArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Delete zero or more Films_wishlists.
     * @param {films_wishlistDeleteManyArgs} args - Arguments to filter Films_wishlists to delete.
     * @example
     * // Delete a few Films_wishlists
     * const { count } = await prisma.films_wishlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends films_wishlistDeleteManyArgs>(
      args?: SelectSubset<T, films_wishlistDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Films_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {films_wishlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Films_wishlists
     * const films_wishlist = await prisma.films_wishlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends films_wishlistUpdateManyArgs>(
      args: SelectSubset<T, films_wishlistUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Films_wishlist.
     * @param {films_wishlistUpsertArgs} args - Arguments to update or create a Films_wishlist.
     * @example
     * // Update or create a Films_wishlist
     * const films_wishlist = await prisma.films_wishlist.upsert({
     *   create: {
     *     // ... data to create a Films_wishlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Films_wishlist we want to update
     *   }
     * })
    **/
    upsert<T extends films_wishlistUpsertArgs>(
      args: SelectSubset<T, films_wishlistUpsertArgs>
    ): Prisma__films_wishlistClient<films_wishlistGetPayload<T>>

    /**
     * Count the number of Films_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {films_wishlistCountArgs} args - Arguments to filter Films_wishlists to count.
     * @example
     * // Count the number of Films_wishlists
     * const count = await prisma.films_wishlist.count({
     *   where: {
     *     // ... the filter for the Films_wishlists we want to count
     *   }
     * })
    **/
    count<T extends films_wishlistCountArgs>(
      args?: Subset<T, films_wishlistCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Films_wishlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Films_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Films_wishlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Films_wishlistAggregateArgs>(args: Subset<T, Films_wishlistAggregateArgs>): PrismaPromise<GetFilms_wishlistAggregateType<T>>

    /**
     * Group by Films_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Films_wishlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Films_wishlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Films_wishlistGroupByArgs['orderBy'] }
        : { orderBy?: Films_wishlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Films_wishlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilms_wishlistGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for films_wishlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__films_wishlistClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    medias<T extends mediasArgs= {}>(args?: Subset<T, mediasArgs>): Prisma__mediasClient<mediasGetPayload<T> | Null>;

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * films_wishlist base type for findUnique actions
   */
  export type films_wishlistFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter, which films_wishlist to fetch.
     */
    where: films_wishlistWhereUniqueInput
  }

  /**
   * films_wishlist findUnique
   */
  export interface films_wishlistFindUniqueArgs extends films_wishlistFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * films_wishlist findUniqueOrThrow
   */
  export type films_wishlistFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter, which films_wishlist to fetch.
     */
    where: films_wishlistWhereUniqueInput
  }


  /**
   * films_wishlist base type for findFirst actions
   */
  export type films_wishlistFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter, which films_wishlist to fetch.
     */
    where?: films_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of films_wishlists to fetch.
     */
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for films_wishlists.
     */
    cursor?: films_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` films_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` films_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of films_wishlists.
     */
    distinct?: Enumerable<Films_wishlistScalarFieldEnum>
  }

  /**
   * films_wishlist findFirst
   */
  export interface films_wishlistFindFirstArgs extends films_wishlistFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * films_wishlist findFirstOrThrow
   */
  export type films_wishlistFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter, which films_wishlist to fetch.
     */
    where?: films_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of films_wishlists to fetch.
     */
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for films_wishlists.
     */
    cursor?: films_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` films_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` films_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of films_wishlists.
     */
    distinct?: Enumerable<Films_wishlistScalarFieldEnum>
  }


  /**
   * films_wishlist findMany
   */
  export type films_wishlistFindManyArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter, which films_wishlists to fetch.
     */
    where?: films_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of films_wishlists to fetch.
     */
    orderBy?: Enumerable<films_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing films_wishlists.
     */
    cursor?: films_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` films_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` films_wishlists.
     */
    skip?: number
    distinct?: Enumerable<Films_wishlistScalarFieldEnum>
  }


  /**
   * films_wishlist create
   */
  export type films_wishlistCreateArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * The data needed to create a films_wishlist.
     */
    data: XOR<films_wishlistCreateInput, films_wishlistUncheckedCreateInput>
  }


  /**
   * films_wishlist createMany
   */
  export type films_wishlistCreateManyArgs = {
    /**
     * The data used to create many films_wishlists.
     */
    data: Enumerable<films_wishlistCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * films_wishlist update
   */
  export type films_wishlistUpdateArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * The data needed to update a films_wishlist.
     */
    data: XOR<films_wishlistUpdateInput, films_wishlistUncheckedUpdateInput>
    /**
     * Choose, which films_wishlist to update.
     */
    where: films_wishlistWhereUniqueInput
  }


  /**
   * films_wishlist updateMany
   */
  export type films_wishlistUpdateManyArgs = {
    /**
     * The data used to update films_wishlists.
     */
    data: XOR<films_wishlistUpdateManyMutationInput, films_wishlistUncheckedUpdateManyInput>
    /**
     * Filter which films_wishlists to update
     */
    where?: films_wishlistWhereInput
  }


  /**
   * films_wishlist upsert
   */
  export type films_wishlistUpsertArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * The filter to search for the films_wishlist to update in case it exists.
     */
    where: films_wishlistWhereUniqueInput
    /**
     * In case the films_wishlist found by the `where` argument doesn't exist, create a new films_wishlist with this data.
     */
    create: XOR<films_wishlistCreateInput, films_wishlistUncheckedCreateInput>
    /**
     * In case the films_wishlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<films_wishlistUpdateInput, films_wishlistUncheckedUpdateInput>
  }


  /**
   * films_wishlist delete
   */
  export type films_wishlistDeleteArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
    /**
     * Filter which films_wishlist to delete.
     */
    where: films_wishlistWhereUniqueInput
  }


  /**
   * films_wishlist deleteMany
   */
  export type films_wishlistDeleteManyArgs = {
    /**
     * Filter which films_wishlists to delete
     */
    where?: films_wishlistWhereInput
  }


  /**
   * films_wishlist without action
   */
  export type films_wishlistArgs = {
    /**
     * Select specific fields to fetch from the films_wishlist
     */
    select?: films_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: films_wishlistInclude | null
  }



  /**
   * Model tv_shows_wishlist
   */


  export type AggregateTv_shows_wishlist = {
    _count: Tv_shows_wishlistCountAggregateOutputType | null
    _avg: Tv_shows_wishlistAvgAggregateOutputType | null
    _sum: Tv_shows_wishlistSumAggregateOutputType | null
    _min: Tv_shows_wishlistMinAggregateOutputType | null
    _max: Tv_shows_wishlistMaxAggregateOutputType | null
  }

  export type Tv_shows_wishlistAvgAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    seasons_number: number | null
    vote_average: number | null
  }

  export type Tv_shows_wishlistSumAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    seasons_number: number | null
    vote_average: number | null
  }

  export type Tv_shows_wishlistMinAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    creator: string | null
    seasons_number: number | null
    tagline: string | null
    img: string | null
    created_at: Date | null
    vote_average: number | null
    overview: string | null
  }

  export type Tv_shows_wishlistMaxAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    creator: string | null
    seasons_number: number | null
    tagline: string | null
    img: string | null
    created_at: Date | null
    vote_average: number | null
    overview: string | null
  }

  export type Tv_shows_wishlistCountAggregateOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: number
    title: number
    creator: number
    seasons_number: number
    tagline: number
    img: number
    created_at: number
    vote_average: number
    overview: number
    _all: number
  }


  export type Tv_shows_wishlistAvgAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    seasons_number?: true
    vote_average?: true
  }

  export type Tv_shows_wishlistSumAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    seasons_number?: true
    vote_average?: true
  }

  export type Tv_shows_wishlistMinAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    creator?: true
    seasons_number?: true
    tagline?: true
    img?: true
    created_at?: true
    vote_average?: true
    overview?: true
  }

  export type Tv_shows_wishlistMaxAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    creator?: true
    seasons_number?: true
    tagline?: true
    img?: true
    created_at?: true
    vote_average?: true
    overview?: true
  }

  export type Tv_shows_wishlistCountAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    creator?: true
    seasons_number?: true
    tagline?: true
    img?: true
    created_at?: true
    vote_average?: true
    overview?: true
    _all?: true
  }

  export type Tv_shows_wishlistAggregateArgs = {
    /**
     * Filter which tv_shows_wishlist to aggregate.
     */
    where?: tv_shows_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tv_shows_wishlists to fetch.
     */
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tv_shows_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tv_shows_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tv_shows_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tv_shows_wishlists
    **/
    _count?: true | Tv_shows_wishlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tv_shows_wishlistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tv_shows_wishlistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tv_shows_wishlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tv_shows_wishlistMaxAggregateInputType
  }

  export type GetTv_shows_wishlistAggregateType<T extends Tv_shows_wishlistAggregateArgs> = {
        [P in keyof T & keyof AggregateTv_shows_wishlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTv_shows_wishlist[P]>
      : GetScalarType<T[P], AggregateTv_shows_wishlist[P]>
  }




  export type Tv_shows_wishlistGroupByArgs = {
    where?: tv_shows_wishlistWhereInput
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithAggregationInput>
    by: Tv_shows_wishlistScalarFieldEnum[]
    having?: tv_shows_wishlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tv_shows_wishlistCountAggregateInputType | true
    _avg?: Tv_shows_wishlistAvgAggregateInputType
    _sum?: Tv_shows_wishlistSumAggregateInputType
    _min?: Tv_shows_wishlistMinAggregateInputType
    _max?: Tv_shows_wishlistMaxAggregateInputType
  }


  export type Tv_shows_wishlistGroupByOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at: Date
    vote_average: number
    overview: string
    _count: Tv_shows_wishlistCountAggregateOutputType | null
    _avg: Tv_shows_wishlistAvgAggregateOutputType | null
    _sum: Tv_shows_wishlistSumAggregateOutputType | null
    _min: Tv_shows_wishlistMinAggregateOutputType | null
    _max: Tv_shows_wishlistMaxAggregateOutputType | null
  }

  type GetTv_shows_wishlistGroupByPayload<T extends Tv_shows_wishlistGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Tv_shows_wishlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tv_shows_wishlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tv_shows_wishlistGroupByOutputType[P]>
            : GetScalarType<T[P], Tv_shows_wishlistGroupByOutputType[P]>
        }
      >
    >


  export type tv_shows_wishlistSelect = {
    id?: boolean
    medias_id?: boolean
    user_id?: boolean
    api_id?: boolean
    title?: boolean
    creator?: boolean
    seasons_number?: boolean
    tagline?: boolean
    img?: boolean
    created_at?: boolean
    vote_average?: boolean
    overview?: boolean
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }


  export type tv_shows_wishlistInclude = {
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }

  export type tv_shows_wishlistGetPayload<S extends boolean | null | undefined | tv_shows_wishlistArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? tv_shows_wishlist :
    S extends undefined ? never :
    S extends { include: any } & (tv_shows_wishlistArgs | tv_shows_wishlistFindManyArgs)
    ? tv_shows_wishlist  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'medias' ? mediasGetPayload<S['include'][P]> :
        P extends 'users' ? usersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (tv_shows_wishlistArgs | tv_shows_wishlistFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'medias' ? mediasGetPayload<S['select'][P]> :
        P extends 'users' ? usersGetPayload<S['select'][P]> :  P extends keyof tv_shows_wishlist ? tv_shows_wishlist[P] : never
  } 
      : tv_shows_wishlist


  type tv_shows_wishlistCountArgs = 
    Omit<tv_shows_wishlistFindManyArgs, 'select' | 'include'> & {
      select?: Tv_shows_wishlistCountAggregateInputType | true
    }

  export interface tv_shows_wishlistDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Tv_shows_wishlist that matches the filter.
     * @param {tv_shows_wishlistFindUniqueArgs} args - Arguments to find a Tv_shows_wishlist
     * @example
     * // Get one Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tv_shows_wishlistFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, tv_shows_wishlistFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'tv_shows_wishlist'> extends True ? Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>> : Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T> | null, null>

    /**
     * Find one Tv_shows_wishlist that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tv_shows_wishlistFindUniqueOrThrowArgs} args - Arguments to find a Tv_shows_wishlist
     * @example
     * // Get one Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tv_shows_wishlistFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, tv_shows_wishlistFindUniqueOrThrowArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Find the first Tv_shows_wishlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tv_shows_wishlistFindFirstArgs} args - Arguments to find a Tv_shows_wishlist
     * @example
     * // Get one Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tv_shows_wishlistFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, tv_shows_wishlistFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'tv_shows_wishlist'> extends True ? Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>> : Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T> | null, null>

    /**
     * Find the first Tv_shows_wishlist that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tv_shows_wishlistFindFirstOrThrowArgs} args - Arguments to find a Tv_shows_wishlist
     * @example
     * // Get one Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tv_shows_wishlistFindFirstOrThrowArgs>(
      args?: SelectSubset<T, tv_shows_wishlistFindFirstOrThrowArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Find zero or more Tv_shows_wishlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tv_shows_wishlistFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tv_shows_wishlists
     * const tv_shows_wishlists = await prisma.tv_shows_wishlist.findMany()
     * 
     * // Get first 10 Tv_shows_wishlists
     * const tv_shows_wishlists = await prisma.tv_shows_wishlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tv_shows_wishlistWithIdOnly = await prisma.tv_shows_wishlist.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tv_shows_wishlistFindManyArgs>(
      args?: SelectSubset<T, tv_shows_wishlistFindManyArgs>
    ): PrismaPromise<Array<tv_shows_wishlistGetPayload<T>>>

    /**
     * Create a Tv_shows_wishlist.
     * @param {tv_shows_wishlistCreateArgs} args - Arguments to create a Tv_shows_wishlist.
     * @example
     * // Create one Tv_shows_wishlist
     * const Tv_shows_wishlist = await prisma.tv_shows_wishlist.create({
     *   data: {
     *     // ... data to create a Tv_shows_wishlist
     *   }
     * })
     * 
    **/
    create<T extends tv_shows_wishlistCreateArgs>(
      args: SelectSubset<T, tv_shows_wishlistCreateArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Create many Tv_shows_wishlists.
     *     @param {tv_shows_wishlistCreateManyArgs} args - Arguments to create many Tv_shows_wishlists.
     *     @example
     *     // Create many Tv_shows_wishlists
     *     const tv_shows_wishlist = await prisma.tv_shows_wishlist.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tv_shows_wishlistCreateManyArgs>(
      args?: SelectSubset<T, tv_shows_wishlistCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Tv_shows_wishlist.
     * @param {tv_shows_wishlistDeleteArgs} args - Arguments to delete one Tv_shows_wishlist.
     * @example
     * // Delete one Tv_shows_wishlist
     * const Tv_shows_wishlist = await prisma.tv_shows_wishlist.delete({
     *   where: {
     *     // ... filter to delete one Tv_shows_wishlist
     *   }
     * })
     * 
    **/
    delete<T extends tv_shows_wishlistDeleteArgs>(
      args: SelectSubset<T, tv_shows_wishlistDeleteArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Update one Tv_shows_wishlist.
     * @param {tv_shows_wishlistUpdateArgs} args - Arguments to update one Tv_shows_wishlist.
     * @example
     * // Update one Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tv_shows_wishlistUpdateArgs>(
      args: SelectSubset<T, tv_shows_wishlistUpdateArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Delete zero or more Tv_shows_wishlists.
     * @param {tv_shows_wishlistDeleteManyArgs} args - Arguments to filter Tv_shows_wishlists to delete.
     * @example
     * // Delete a few Tv_shows_wishlists
     * const { count } = await prisma.tv_shows_wishlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tv_shows_wishlistDeleteManyArgs>(
      args?: SelectSubset<T, tv_shows_wishlistDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tv_shows_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tv_shows_wishlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tv_shows_wishlists
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tv_shows_wishlistUpdateManyArgs>(
      args: SelectSubset<T, tv_shows_wishlistUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Tv_shows_wishlist.
     * @param {tv_shows_wishlistUpsertArgs} args - Arguments to update or create a Tv_shows_wishlist.
     * @example
     * // Update or create a Tv_shows_wishlist
     * const tv_shows_wishlist = await prisma.tv_shows_wishlist.upsert({
     *   create: {
     *     // ... data to create a Tv_shows_wishlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tv_shows_wishlist we want to update
     *   }
     * })
    **/
    upsert<T extends tv_shows_wishlistUpsertArgs>(
      args: SelectSubset<T, tv_shows_wishlistUpsertArgs>
    ): Prisma__tv_shows_wishlistClient<tv_shows_wishlistGetPayload<T>>

    /**
     * Count the number of Tv_shows_wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tv_shows_wishlistCountArgs} args - Arguments to filter Tv_shows_wishlists to count.
     * @example
     * // Count the number of Tv_shows_wishlists
     * const count = await prisma.tv_shows_wishlist.count({
     *   where: {
     *     // ... the filter for the Tv_shows_wishlists we want to count
     *   }
     * })
    **/
    count<T extends tv_shows_wishlistCountArgs>(
      args?: Subset<T, tv_shows_wishlistCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tv_shows_wishlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tv_shows_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tv_shows_wishlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tv_shows_wishlistAggregateArgs>(args: Subset<T, Tv_shows_wishlistAggregateArgs>): PrismaPromise<GetTv_shows_wishlistAggregateType<T>>

    /**
     * Group by Tv_shows_wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tv_shows_wishlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Tv_shows_wishlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Tv_shows_wishlistGroupByArgs['orderBy'] }
        : { orderBy?: Tv_shows_wishlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Tv_shows_wishlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTv_shows_wishlistGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for tv_shows_wishlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__tv_shows_wishlistClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    medias<T extends mediasArgs= {}>(args?: Subset<T, mediasArgs>): Prisma__mediasClient<mediasGetPayload<T> | Null>;

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * tv_shows_wishlist base type for findUnique actions
   */
  export type tv_shows_wishlistFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter, which tv_shows_wishlist to fetch.
     */
    where: tv_shows_wishlistWhereUniqueInput
  }

  /**
   * tv_shows_wishlist findUnique
   */
  export interface tv_shows_wishlistFindUniqueArgs extends tv_shows_wishlistFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tv_shows_wishlist findUniqueOrThrow
   */
  export type tv_shows_wishlistFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter, which tv_shows_wishlist to fetch.
     */
    where: tv_shows_wishlistWhereUniqueInput
  }


  /**
   * tv_shows_wishlist base type for findFirst actions
   */
  export type tv_shows_wishlistFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter, which tv_shows_wishlist to fetch.
     */
    where?: tv_shows_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tv_shows_wishlists to fetch.
     */
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tv_shows_wishlists.
     */
    cursor?: tv_shows_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tv_shows_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tv_shows_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tv_shows_wishlists.
     */
    distinct?: Enumerable<Tv_shows_wishlistScalarFieldEnum>
  }

  /**
   * tv_shows_wishlist findFirst
   */
  export interface tv_shows_wishlistFindFirstArgs extends tv_shows_wishlistFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * tv_shows_wishlist findFirstOrThrow
   */
  export type tv_shows_wishlistFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter, which tv_shows_wishlist to fetch.
     */
    where?: tv_shows_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tv_shows_wishlists to fetch.
     */
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tv_shows_wishlists.
     */
    cursor?: tv_shows_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tv_shows_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tv_shows_wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tv_shows_wishlists.
     */
    distinct?: Enumerable<Tv_shows_wishlistScalarFieldEnum>
  }


  /**
   * tv_shows_wishlist findMany
   */
  export type tv_shows_wishlistFindManyArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter, which tv_shows_wishlists to fetch.
     */
    where?: tv_shows_wishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tv_shows_wishlists to fetch.
     */
    orderBy?: Enumerable<tv_shows_wishlistOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tv_shows_wishlists.
     */
    cursor?: tv_shows_wishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tv_shows_wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tv_shows_wishlists.
     */
    skip?: number
    distinct?: Enumerable<Tv_shows_wishlistScalarFieldEnum>
  }


  /**
   * tv_shows_wishlist create
   */
  export type tv_shows_wishlistCreateArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * The data needed to create a tv_shows_wishlist.
     */
    data: XOR<tv_shows_wishlistCreateInput, tv_shows_wishlistUncheckedCreateInput>
  }


  /**
   * tv_shows_wishlist createMany
   */
  export type tv_shows_wishlistCreateManyArgs = {
    /**
     * The data used to create many tv_shows_wishlists.
     */
    data: Enumerable<tv_shows_wishlistCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * tv_shows_wishlist update
   */
  export type tv_shows_wishlistUpdateArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * The data needed to update a tv_shows_wishlist.
     */
    data: XOR<tv_shows_wishlistUpdateInput, tv_shows_wishlistUncheckedUpdateInput>
    /**
     * Choose, which tv_shows_wishlist to update.
     */
    where: tv_shows_wishlistWhereUniqueInput
  }


  /**
   * tv_shows_wishlist updateMany
   */
  export type tv_shows_wishlistUpdateManyArgs = {
    /**
     * The data used to update tv_shows_wishlists.
     */
    data: XOR<tv_shows_wishlistUpdateManyMutationInput, tv_shows_wishlistUncheckedUpdateManyInput>
    /**
     * Filter which tv_shows_wishlists to update
     */
    where?: tv_shows_wishlistWhereInput
  }


  /**
   * tv_shows_wishlist upsert
   */
  export type tv_shows_wishlistUpsertArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * The filter to search for the tv_shows_wishlist to update in case it exists.
     */
    where: tv_shows_wishlistWhereUniqueInput
    /**
     * In case the tv_shows_wishlist found by the `where` argument doesn't exist, create a new tv_shows_wishlist with this data.
     */
    create: XOR<tv_shows_wishlistCreateInput, tv_shows_wishlistUncheckedCreateInput>
    /**
     * In case the tv_shows_wishlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tv_shows_wishlistUpdateInput, tv_shows_wishlistUncheckedUpdateInput>
  }


  /**
   * tv_shows_wishlist delete
   */
  export type tv_shows_wishlistDeleteArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
    /**
     * Filter which tv_shows_wishlist to delete.
     */
    where: tv_shows_wishlistWhereUniqueInput
  }


  /**
   * tv_shows_wishlist deleteMany
   */
  export type tv_shows_wishlistDeleteManyArgs = {
    /**
     * Filter which tv_shows_wishlists to delete
     */
    where?: tv_shows_wishlistWhereInput
  }


  /**
   * tv_shows_wishlist without action
   */
  export type tv_shows_wishlistArgs = {
    /**
     * Select specific fields to fetch from the tv_shows_wishlist
     */
    select?: tv_shows_wishlistSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: tv_shows_wishlistInclude | null
  }



  /**
   * Model watchings
   */


  export type AggregateWatchings = {
    _count: WatchingsCountAggregateOutputType | null
    _avg: WatchingsAvgAggregateOutputType | null
    _sum: WatchingsSumAggregateOutputType | null
    _min: WatchingsMinAggregateOutputType | null
    _max: WatchingsMaxAggregateOutputType | null
  }

  export type WatchingsAvgAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    vote_average: number | null
    grade: Decimal | null
  }

  export type WatchingsSumAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    vote_average: number | null
    grade: Decimal | null
  }

  export type WatchingsMinAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    overview: string | null
    release_date: string | null
    img: string | null
    created_at: Date | null
    vote_average: number | null
    watched_at: Date | null
    grade: Decimal | null
    review: string | null
  }

  export type WatchingsMaxAggregateOutputType = {
    id: number | null
    medias_id: number | null
    user_id: number | null
    api_id: string | null
    title: string | null
    overview: string | null
    release_date: string | null
    img: string | null
    created_at: Date | null
    vote_average: number | null
    watched_at: Date | null
    grade: Decimal | null
    review: string | null
  }

  export type WatchingsCountAggregateOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: number
    title: number
    overview: number
    release_date: number
    img: number
    created_at: number
    vote_average: number
    watched_at: number
    grade: number
    review: number
    _all: number
  }


  export type WatchingsAvgAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    vote_average?: true
    grade?: true
  }

  export type WatchingsSumAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    vote_average?: true
    grade?: true
  }

  export type WatchingsMinAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    overview?: true
    release_date?: true
    img?: true
    created_at?: true
    vote_average?: true
    watched_at?: true
    grade?: true
    review?: true
  }

  export type WatchingsMaxAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    overview?: true
    release_date?: true
    img?: true
    created_at?: true
    vote_average?: true
    watched_at?: true
    grade?: true
    review?: true
  }

  export type WatchingsCountAggregateInputType = {
    id?: true
    medias_id?: true
    user_id?: true
    api_id?: true
    title?: true
    overview?: true
    release_date?: true
    img?: true
    created_at?: true
    vote_average?: true
    watched_at?: true
    grade?: true
    review?: true
    _all?: true
  }

  export type WatchingsAggregateArgs = {
    /**
     * Filter which watchings to aggregate.
     */
    where?: watchingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchings to fetch.
     */
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: watchingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned watchings
    **/
    _count?: true | WatchingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WatchingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WatchingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WatchingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WatchingsMaxAggregateInputType
  }

  export type GetWatchingsAggregateType<T extends WatchingsAggregateArgs> = {
        [P in keyof T & keyof AggregateWatchings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWatchings[P]>
      : GetScalarType<T[P], AggregateWatchings[P]>
  }




  export type WatchingsGroupByArgs = {
    where?: watchingsWhereInput
    orderBy?: Enumerable<watchingsOrderByWithAggregationInput>
    by: WatchingsScalarFieldEnum[]
    having?: watchingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WatchingsCountAggregateInputType | true
    _avg?: WatchingsAvgAggregateInputType
    _sum?: WatchingsSumAggregateInputType
    _min?: WatchingsMinAggregateInputType
    _max?: WatchingsMaxAggregateInputType
  }


  export type WatchingsGroupByOutputType = {
    id: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at: Date
    vote_average: number
    watched_at: Date
    grade: Decimal
    review: string | null
    _count: WatchingsCountAggregateOutputType | null
    _avg: WatchingsAvgAggregateOutputType | null
    _sum: WatchingsSumAggregateOutputType | null
    _min: WatchingsMinAggregateOutputType | null
    _max: WatchingsMaxAggregateOutputType | null
  }

  type GetWatchingsGroupByPayload<T extends WatchingsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<WatchingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WatchingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WatchingsGroupByOutputType[P]>
            : GetScalarType<T[P], WatchingsGroupByOutputType[P]>
        }
      >
    >


  export type watchingsSelect = {
    id?: boolean
    medias_id?: boolean
    user_id?: boolean
    api_id?: boolean
    title?: boolean
    overview?: boolean
    release_date?: boolean
    img?: boolean
    created_at?: boolean
    vote_average?: boolean
    watched_at?: boolean
    grade?: boolean
    review?: boolean
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }


  export type watchingsInclude = {
    medias?: boolean | mediasArgs
    users?: boolean | usersArgs
  }

  export type watchingsGetPayload<S extends boolean | null | undefined | watchingsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? watchings :
    S extends undefined ? never :
    S extends { include: any } & (watchingsArgs | watchingsFindManyArgs)
    ? watchings  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'medias' ? mediasGetPayload<S['include'][P]> :
        P extends 'users' ? usersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (watchingsArgs | watchingsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'medias' ? mediasGetPayload<S['select'][P]> :
        P extends 'users' ? usersGetPayload<S['select'][P]> :  P extends keyof watchings ? watchings[P] : never
  } 
      : watchings


  type watchingsCountArgs = 
    Omit<watchingsFindManyArgs, 'select' | 'include'> & {
      select?: WatchingsCountAggregateInputType | true
    }

  export interface watchingsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Watchings that matches the filter.
     * @param {watchingsFindUniqueArgs} args - Arguments to find a Watchings
     * @example
     * // Get one Watchings
     * const watchings = await prisma.watchings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends watchingsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, watchingsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'watchings'> extends True ? Prisma__watchingsClient<watchingsGetPayload<T>> : Prisma__watchingsClient<watchingsGetPayload<T> | null, null>

    /**
     * Find one Watchings that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {watchingsFindUniqueOrThrowArgs} args - Arguments to find a Watchings
     * @example
     * // Get one Watchings
     * const watchings = await prisma.watchings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends watchingsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, watchingsFindUniqueOrThrowArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Find the first Watchings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchingsFindFirstArgs} args - Arguments to find a Watchings
     * @example
     * // Get one Watchings
     * const watchings = await prisma.watchings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends watchingsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, watchingsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'watchings'> extends True ? Prisma__watchingsClient<watchingsGetPayload<T>> : Prisma__watchingsClient<watchingsGetPayload<T> | null, null>

    /**
     * Find the first Watchings that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchingsFindFirstOrThrowArgs} args - Arguments to find a Watchings
     * @example
     * // Get one Watchings
     * const watchings = await prisma.watchings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends watchingsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, watchingsFindFirstOrThrowArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Find zero or more Watchings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchingsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Watchings
     * const watchings = await prisma.watchings.findMany()
     * 
     * // Get first 10 Watchings
     * const watchings = await prisma.watchings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const watchingsWithIdOnly = await prisma.watchings.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends watchingsFindManyArgs>(
      args?: SelectSubset<T, watchingsFindManyArgs>
    ): PrismaPromise<Array<watchingsGetPayload<T>>>

    /**
     * Create a Watchings.
     * @param {watchingsCreateArgs} args - Arguments to create a Watchings.
     * @example
     * // Create one Watchings
     * const Watchings = await prisma.watchings.create({
     *   data: {
     *     // ... data to create a Watchings
     *   }
     * })
     * 
    **/
    create<T extends watchingsCreateArgs>(
      args: SelectSubset<T, watchingsCreateArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Create many Watchings.
     *     @param {watchingsCreateManyArgs} args - Arguments to create many Watchings.
     *     @example
     *     // Create many Watchings
     *     const watchings = await prisma.watchings.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends watchingsCreateManyArgs>(
      args?: SelectSubset<T, watchingsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Watchings.
     * @param {watchingsDeleteArgs} args - Arguments to delete one Watchings.
     * @example
     * // Delete one Watchings
     * const Watchings = await prisma.watchings.delete({
     *   where: {
     *     // ... filter to delete one Watchings
     *   }
     * })
     * 
    **/
    delete<T extends watchingsDeleteArgs>(
      args: SelectSubset<T, watchingsDeleteArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Update one Watchings.
     * @param {watchingsUpdateArgs} args - Arguments to update one Watchings.
     * @example
     * // Update one Watchings
     * const watchings = await prisma.watchings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends watchingsUpdateArgs>(
      args: SelectSubset<T, watchingsUpdateArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Delete zero or more Watchings.
     * @param {watchingsDeleteManyArgs} args - Arguments to filter Watchings to delete.
     * @example
     * // Delete a few Watchings
     * const { count } = await prisma.watchings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends watchingsDeleteManyArgs>(
      args?: SelectSubset<T, watchingsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Watchings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Watchings
     * const watchings = await prisma.watchings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends watchingsUpdateManyArgs>(
      args: SelectSubset<T, watchingsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Watchings.
     * @param {watchingsUpsertArgs} args - Arguments to update or create a Watchings.
     * @example
     * // Update or create a Watchings
     * const watchings = await prisma.watchings.upsert({
     *   create: {
     *     // ... data to create a Watchings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Watchings we want to update
     *   }
     * })
    **/
    upsert<T extends watchingsUpsertArgs>(
      args: SelectSubset<T, watchingsUpsertArgs>
    ): Prisma__watchingsClient<watchingsGetPayload<T>>

    /**
     * Count the number of Watchings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {watchingsCountArgs} args - Arguments to filter Watchings to count.
     * @example
     * // Count the number of Watchings
     * const count = await prisma.watchings.count({
     *   where: {
     *     // ... the filter for the Watchings we want to count
     *   }
     * })
    **/
    count<T extends watchingsCountArgs>(
      args?: Subset<T, watchingsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WatchingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Watchings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WatchingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WatchingsAggregateArgs>(args: Subset<T, WatchingsAggregateArgs>): PrismaPromise<GetWatchingsAggregateType<T>>

    /**
     * Group by Watchings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WatchingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WatchingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WatchingsGroupByArgs['orderBy'] }
        : { orderBy?: WatchingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WatchingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWatchingsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for watchings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__watchingsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    medias<T extends mediasArgs= {}>(args?: Subset<T, mediasArgs>): Prisma__mediasClient<mediasGetPayload<T> | Null>;

    users<T extends usersArgs= {}>(args?: Subset<T, usersArgs>): Prisma__usersClient<usersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * watchings base type for findUnique actions
   */
  export type watchingsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter, which watchings to fetch.
     */
    where: watchingsWhereUniqueInput
  }

  /**
   * watchings findUnique
   */
  export interface watchingsFindUniqueArgs extends watchingsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * watchings findUniqueOrThrow
   */
  export type watchingsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter, which watchings to fetch.
     */
    where: watchingsWhereUniqueInput
  }


  /**
   * watchings base type for findFirst actions
   */
  export type watchingsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter, which watchings to fetch.
     */
    where?: watchingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchings to fetch.
     */
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for watchings.
     */
    cursor?: watchingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of watchings.
     */
    distinct?: Enumerable<WatchingsScalarFieldEnum>
  }

  /**
   * watchings findFirst
   */
  export interface watchingsFindFirstArgs extends watchingsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * watchings findFirstOrThrow
   */
  export type watchingsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter, which watchings to fetch.
     */
    where?: watchingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchings to fetch.
     */
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for watchings.
     */
    cursor?: watchingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of watchings.
     */
    distinct?: Enumerable<WatchingsScalarFieldEnum>
  }


  /**
   * watchings findMany
   */
  export type watchingsFindManyArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter, which watchings to fetch.
     */
    where?: watchingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of watchings to fetch.
     */
    orderBy?: Enumerable<watchingsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing watchings.
     */
    cursor?: watchingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` watchings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` watchings.
     */
    skip?: number
    distinct?: Enumerable<WatchingsScalarFieldEnum>
  }


  /**
   * watchings create
   */
  export type watchingsCreateArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * The data needed to create a watchings.
     */
    data: XOR<watchingsCreateInput, watchingsUncheckedCreateInput>
  }


  /**
   * watchings createMany
   */
  export type watchingsCreateManyArgs = {
    /**
     * The data used to create many watchings.
     */
    data: Enumerable<watchingsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * watchings update
   */
  export type watchingsUpdateArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * The data needed to update a watchings.
     */
    data: XOR<watchingsUpdateInput, watchingsUncheckedUpdateInput>
    /**
     * Choose, which watchings to update.
     */
    where: watchingsWhereUniqueInput
  }


  /**
   * watchings updateMany
   */
  export type watchingsUpdateManyArgs = {
    /**
     * The data used to update watchings.
     */
    data: XOR<watchingsUpdateManyMutationInput, watchingsUncheckedUpdateManyInput>
    /**
     * Filter which watchings to update
     */
    where?: watchingsWhereInput
  }


  /**
   * watchings upsert
   */
  export type watchingsUpsertArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * The filter to search for the watchings to update in case it exists.
     */
    where: watchingsWhereUniqueInput
    /**
     * In case the watchings found by the `where` argument doesn't exist, create a new watchings with this data.
     */
    create: XOR<watchingsCreateInput, watchingsUncheckedCreateInput>
    /**
     * In case the watchings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<watchingsUpdateInput, watchingsUncheckedUpdateInput>
  }


  /**
   * watchings delete
   */
  export type watchingsDeleteArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
    /**
     * Filter which watchings to delete.
     */
    where: watchingsWhereUniqueInput
  }


  /**
   * watchings deleteMany
   */
  export type watchingsDeleteManyArgs = {
    /**
     * Filter which watchings to delete
     */
    where?: watchingsWhereInput
  }


  /**
   * watchings without action
   */
  export type watchingsArgs = {
    /**
     * Select specific fields to fetch from the watchings
     */
    select?: watchingsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: watchingsInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const Books_wishlistScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    medias_id: 'medias_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    book_api_id: 'book_api_id',
    title: 'title',
    author: 'author',
    description: 'description',
    img: 'img',
    page_count: 'page_count'
  };

  export type Books_wishlistScalarFieldEnum = (typeof Books_wishlistScalarFieldEnum)[keyof typeof Books_wishlistScalarFieldEnum]


  export const Films_wishlistScalarFieldEnum: {
    id: 'id',
    medias_id: 'medias_id',
    user_id: 'user_id',
    api_id: 'api_id',
    title: 'title',
    tagline: 'tagline',
    runtime: 'runtime',
    created_at: 'created_at',
    img: 'img',
    vote_average: 'vote_average',
    overview: 'overview'
  };

  export type Films_wishlistScalarFieldEnum = (typeof Films_wishlistScalarFieldEnum)[keyof typeof Films_wishlistScalarFieldEnum]


  export const MediasScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type MediasScalarFieldEnum = (typeof MediasScalarFieldEnum)[keyof typeof MediasScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const ReadingsScalarFieldEnum: {
    id: 'id',
    medias_id: 'medias_id',
    user_id: 'user_id',
    grade: 'grade',
    review: 'review',
    book_api_id: 'book_api_id',
    title: 'title',
    author: 'author',
    description: 'description',
    img: 'img',
    page_count: 'page_count',
    read_at: 'read_at'
  };

  export type ReadingsScalarFieldEnum = (typeof ReadingsScalarFieldEnum)[keyof typeof ReadingsScalarFieldEnum]


  export const SessionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token: 'token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    active: 'active'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tv_shows_wishlistScalarFieldEnum: {
    id: 'id',
    medias_id: 'medias_id',
    user_id: 'user_id',
    api_id: 'api_id',
    title: 'title',
    creator: 'creator',
    seasons_number: 'seasons_number',
    tagline: 'tagline',
    img: 'img',
    created_at: 'created_at',
    vote_average: 'vote_average',
    overview: 'overview'
  };

  export type Tv_shows_wishlistScalarFieldEnum = (typeof Tv_shows_wishlistScalarFieldEnum)[keyof typeof Tv_shows_wishlistScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const WatchingsScalarFieldEnum: {
    id: 'id',
    medias_id: 'medias_id',
    user_id: 'user_id',
    api_id: 'api_id',
    title: 'title',
    overview: 'overview',
    release_date: 'release_date',
    img: 'img',
    created_at: 'created_at',
    vote_average: 'vote_average',
    watched_at: 'watched_at',
    grade: 'grade',
    review: 'review'
  };

  export type WatchingsScalarFieldEnum = (typeof WatchingsScalarFieldEnum)[keyof typeof WatchingsScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type mediasWhereInput = {
    AND?: Enumerable<mediasWhereInput>
    OR?: Enumerable<mediasWhereInput>
    NOT?: Enumerable<mediasWhereInput>
    id?: IntFilter | number
    name?: StringFilter | string
    books_wishlist?: Books_wishlistListRelationFilter
    films_wishlist?: Films_wishlistListRelationFilter
    readings?: ReadingsListRelationFilter
    tv_shows_wishlist?: Tv_shows_wishlistListRelationFilter
    watchings?: WatchingsListRelationFilter
  }

  export type mediasOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    books_wishlist?: books_wishlistOrderByRelationAggregateInput
    films_wishlist?: films_wishlistOrderByRelationAggregateInput
    readings?: readingsOrderByRelationAggregateInput
    tv_shows_wishlist?: tv_shows_wishlistOrderByRelationAggregateInput
    watchings?: watchingsOrderByRelationAggregateInput
  }

  export type mediasWhereUniqueInput = {
    id?: number
    name?: string
  }

  export type mediasOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: mediasCountOrderByAggregateInput
    _avg?: mediasAvgOrderByAggregateInput
    _max?: mediasMaxOrderByAggregateInput
    _min?: mediasMinOrderByAggregateInput
    _sum?: mediasSumOrderByAggregateInput
  }

  export type mediasScalarWhereWithAggregatesInput = {
    AND?: Enumerable<mediasScalarWhereWithAggregatesInput>
    OR?: Enumerable<mediasScalarWhereWithAggregatesInput>
    NOT?: Enumerable<mediasScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    name?: StringWithAggregatesFilter | string
  }

  export type readingsWhereInput = {
    AND?: Enumerable<readingsWhereInput>
    OR?: Enumerable<readingsWhereInput>
    NOT?: Enumerable<readingsWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    grade?: DecimalFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableFilter | string | null
    book_api_id?: StringFilter | string
    title?: StringFilter | string
    author?: StringFilter | string
    description?: StringNullableFilter | string | null
    img?: StringFilter | string
    page_count?: IntFilter | number
    read_at?: DateTimeFilter | Date | string
    medias?: XOR<MediasRelationFilter, mediasWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type readingsOrderByWithRelationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    read_at?: SortOrder
    medias?: mediasOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type readingsWhereUniqueInput = {
    id?: number
  }

  export type readingsOrderByWithAggregationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    read_at?: SortOrder
    _count?: readingsCountOrderByAggregateInput
    _avg?: readingsAvgOrderByAggregateInput
    _max?: readingsMaxOrderByAggregateInput
    _min?: readingsMinOrderByAggregateInput
    _sum?: readingsSumOrderByAggregateInput
  }

  export type readingsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<readingsScalarWhereWithAggregatesInput>
    OR?: Enumerable<readingsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<readingsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    medias_id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    grade?: DecimalWithAggregatesFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableWithAggregatesFilter | string | null
    book_api_id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    author?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    img?: StringWithAggregatesFilter | string
    page_count?: IntWithAggregatesFilter | number
    read_at?: DateTimeWithAggregatesFilter | Date | string
  }

  export type sessionsWhereInput = {
    AND?: Enumerable<sessionsWhereInput>
    OR?: Enumerable<sessionsWhereInput>
    NOT?: Enumerable<sessionsWhereInput>
    id?: IntFilter | number
    user_id?: IntFilter | number
    token?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeNullableFilter | Date | string | null
    active?: BoolFilter | boolean
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type sessionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    active?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type sessionsWhereUniqueInput = {
    id?: number
  }

  export type sessionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    active?: SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _avg?: sessionsAvgOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
    _sum?: sessionsSumOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<sessionsScalarWhereWithAggregatesInput>
    OR?: Enumerable<sessionsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<sessionsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    token?: StringWithAggregatesFilter | string
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    active?: BoolWithAggregatesFilter | boolean
  }

  export type usersWhereInput = {
    AND?: Enumerable<usersWhereInput>
    OR?: Enumerable<usersWhereInput>
    NOT?: Enumerable<usersWhereInput>
    id?: IntFilter | number
    email?: StringFilter | string
    password?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeNullableFilter | Date | string | null
    books_wishlist?: Books_wishlistListRelationFilter
    films_wishlist?: Films_wishlistListRelationFilter
    readings?: ReadingsListRelationFilter
    sessions?: SessionsListRelationFilter
    tv_shows_wishlist?: Tv_shows_wishlistListRelationFilter
    watchings?: WatchingsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    books_wishlist?: books_wishlistOrderByRelationAggregateInput
    films_wishlist?: films_wishlistOrderByRelationAggregateInput
    readings?: readingsOrderByRelationAggregateInput
    sessions?: sessionsOrderByRelationAggregateInput
    tv_shows_wishlist?: tv_shows_wishlistOrderByRelationAggregateInput
    watchings?: watchingsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = {
    id?: number
    email?: string
  }

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<usersScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    email?: StringWithAggregatesFilter | string
    password?: StringWithAggregatesFilter | string
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
  }

  export type books_wishlistWhereInput = {
    AND?: Enumerable<books_wishlistWhereInput>
    OR?: Enumerable<books_wishlistWhereInput>
    NOT?: Enumerable<books_wishlistWhereInput>
    id?: IntFilter | number
    user_id?: IntFilter | number
    medias_id?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeNullableFilter | Date | string | null
    book_api_id?: StringFilter | string
    title?: StringFilter | string
    author?: StringFilter | string
    description?: StringFilter | string
    img?: StringFilter | string
    page_count?: IntFilter | number
    users?: XOR<UsersRelationFilter, usersWhereInput>
    medias?: XOR<MediasRelationFilter, mediasWhereInput>
  }

  export type books_wishlistOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    users?: usersOrderByWithRelationInput
    medias?: mediasOrderByWithRelationInput
  }

  export type books_wishlistWhereUniqueInput = {
    id?: number
  }

  export type books_wishlistOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    _count?: books_wishlistCountOrderByAggregateInput
    _avg?: books_wishlistAvgOrderByAggregateInput
    _max?: books_wishlistMaxOrderByAggregateInput
    _min?: books_wishlistMinOrderByAggregateInput
    _sum?: books_wishlistSumOrderByAggregateInput
  }

  export type books_wishlistScalarWhereWithAggregatesInput = {
    AND?: Enumerable<books_wishlistScalarWhereWithAggregatesInput>
    OR?: Enumerable<books_wishlistScalarWhereWithAggregatesInput>
    NOT?: Enumerable<books_wishlistScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    medias_id?: IntWithAggregatesFilter | number
    created_at?: DateTimeWithAggregatesFilter | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter | Date | string | null
    book_api_id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    author?: StringWithAggregatesFilter | string
    description?: StringWithAggregatesFilter | string
    img?: StringWithAggregatesFilter | string
    page_count?: IntWithAggregatesFilter | number
  }

  export type films_wishlistWhereInput = {
    AND?: Enumerable<films_wishlistWhereInput>
    OR?: Enumerable<films_wishlistWhereInput>
    NOT?: Enumerable<films_wishlistWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    tagline?: StringFilter | string
    runtime?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    img?: StringFilter | string
    vote_average?: FloatFilter | number
    overview?: StringFilter | string
    medias?: XOR<MediasRelationFilter, mediasWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type films_wishlistOrderByWithRelationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    tagline?: SortOrder
    runtime?: SortOrder
    created_at?: SortOrder
    img?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
    medias?: mediasOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type films_wishlistWhereUniqueInput = {
    id?: number
  }

  export type films_wishlistOrderByWithAggregationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    tagline?: SortOrder
    runtime?: SortOrder
    created_at?: SortOrder
    img?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
    _count?: films_wishlistCountOrderByAggregateInput
    _avg?: films_wishlistAvgOrderByAggregateInput
    _max?: films_wishlistMaxOrderByAggregateInput
    _min?: films_wishlistMinOrderByAggregateInput
    _sum?: films_wishlistSumOrderByAggregateInput
  }

  export type films_wishlistScalarWhereWithAggregatesInput = {
    AND?: Enumerable<films_wishlistScalarWhereWithAggregatesInput>
    OR?: Enumerable<films_wishlistScalarWhereWithAggregatesInput>
    NOT?: Enumerable<films_wishlistScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    medias_id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    api_id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    tagline?: StringWithAggregatesFilter | string
    runtime?: IntWithAggregatesFilter | number
    created_at?: DateTimeWithAggregatesFilter | Date | string
    img?: StringWithAggregatesFilter | string
    vote_average?: FloatWithAggregatesFilter | number
    overview?: StringWithAggregatesFilter | string
  }

  export type tv_shows_wishlistWhereInput = {
    AND?: Enumerable<tv_shows_wishlistWhereInput>
    OR?: Enumerable<tv_shows_wishlistWhereInput>
    NOT?: Enumerable<tv_shows_wishlistWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    creator?: StringFilter | string
    seasons_number?: IntFilter | number
    tagline?: StringFilter | string
    img?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    vote_average?: FloatFilter | number
    overview?: StringFilter | string
    medias?: XOR<MediasRelationFilter, mediasWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type tv_shows_wishlistOrderByWithRelationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    creator?: SortOrder
    seasons_number?: SortOrder
    tagline?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
    medias?: mediasOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type tv_shows_wishlistWhereUniqueInput = {
    id?: number
  }

  export type tv_shows_wishlistOrderByWithAggregationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    creator?: SortOrder
    seasons_number?: SortOrder
    tagline?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
    _count?: tv_shows_wishlistCountOrderByAggregateInput
    _avg?: tv_shows_wishlistAvgOrderByAggregateInput
    _max?: tv_shows_wishlistMaxOrderByAggregateInput
    _min?: tv_shows_wishlistMinOrderByAggregateInput
    _sum?: tv_shows_wishlistSumOrderByAggregateInput
  }

  export type tv_shows_wishlistScalarWhereWithAggregatesInput = {
    AND?: Enumerable<tv_shows_wishlistScalarWhereWithAggregatesInput>
    OR?: Enumerable<tv_shows_wishlistScalarWhereWithAggregatesInput>
    NOT?: Enumerable<tv_shows_wishlistScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    medias_id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    api_id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    creator?: StringWithAggregatesFilter | string
    seasons_number?: IntWithAggregatesFilter | number
    tagline?: StringWithAggregatesFilter | string
    img?: StringWithAggregatesFilter | string
    created_at?: DateTimeWithAggregatesFilter | Date | string
    vote_average?: FloatWithAggregatesFilter | number
    overview?: StringWithAggregatesFilter | string
  }

  export type watchingsWhereInput = {
    AND?: Enumerable<watchingsWhereInput>
    OR?: Enumerable<watchingsWhereInput>
    NOT?: Enumerable<watchingsWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    overview?: StringFilter | string
    release_date?: StringFilter | string
    img?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    vote_average?: FloatFilter | number
    watched_at?: DateTimeFilter | Date | string
    grade?: DecimalFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableFilter | string | null
    medias?: XOR<MediasRelationFilter, mediasWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type watchingsOrderByWithRelationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    overview?: SortOrder
    release_date?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    watched_at?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    medias?: mediasOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type watchingsWhereUniqueInput = {
    id?: number
  }

  export type watchingsOrderByWithAggregationInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    overview?: SortOrder
    release_date?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    watched_at?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    _count?: watchingsCountOrderByAggregateInput
    _avg?: watchingsAvgOrderByAggregateInput
    _max?: watchingsMaxOrderByAggregateInput
    _min?: watchingsMinOrderByAggregateInput
    _sum?: watchingsSumOrderByAggregateInput
  }

  export type watchingsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<watchingsScalarWhereWithAggregatesInput>
    OR?: Enumerable<watchingsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<watchingsScalarWhereWithAggregatesInput>
    id?: IntWithAggregatesFilter | number
    medias_id?: IntWithAggregatesFilter | number
    user_id?: IntWithAggregatesFilter | number
    api_id?: StringWithAggregatesFilter | string
    title?: StringWithAggregatesFilter | string
    overview?: StringWithAggregatesFilter | string
    release_date?: StringWithAggregatesFilter | string
    img?: StringWithAggregatesFilter | string
    created_at?: DateTimeWithAggregatesFilter | Date | string
    vote_average?: FloatWithAggregatesFilter | number
    watched_at?: DateTimeWithAggregatesFilter | Date | string
    grade?: DecimalWithAggregatesFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableWithAggregatesFilter | string | null
  }

  export type mediasCreateInput = {
    name: string
    books_wishlist?: books_wishlistCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutMediasInput
    readings?: readingsCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutMediasInput
    watchings?: watchingsCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateInput = {
    id?: number
    name: string
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutMediasInput
    readings?: readingsUncheckedCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutMediasNestedInput
    readings?: readingsUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    readings?: readingsUncheckedUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type mediasCreateManyInput = {
    id?: number
    name: string
  }

  export type mediasUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type mediasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type readingsCreateInput = {
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
    medias: mediasCreateNestedOneWithoutReadingsInput
    users: usersCreateNestedOneWithoutReadingsInput
  }

  export type readingsUncheckedCreateInput = {
    id?: number
    medias_id: number
    user_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type readingsUpdateInput = {
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
    medias?: mediasUpdateOneRequiredWithoutReadingsNestedInput
    users?: usersUpdateOneRequiredWithoutReadingsNestedInput
  }

  export type readingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type readingsCreateManyInput = {
    id?: number
    medias_id: number
    user_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type readingsUpdateManyMutationInput = {
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type readingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsCreateInput = {
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateInput = {
    id?: number
    user_id: number
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
  }

  export type sessionsUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sessionsCreateManyInput = {
    id?: number
    user_id: number
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
  }

  export type sessionsUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sessionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type usersCreateInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type books_wishlistCreateInput = {
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
    users: usersCreateNestedOneWithoutBooks_wishlistInput
    medias: mediasCreateNestedOneWithoutBooks_wishlistInput
  }

  export type books_wishlistUncheckedCreateInput = {
    id?: number
    user_id: number
    medias_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type books_wishlistUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    users?: usersUpdateOneRequiredWithoutBooks_wishlistNestedInput
    medias?: mediasUpdateOneRequiredWithoutBooks_wishlistNestedInput
  }

  export type books_wishlistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type books_wishlistCreateManyInput = {
    id?: number
    user_id: number
    medias_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type books_wishlistUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type books_wishlistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type films_wishlistCreateInput = {
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
    medias: mediasCreateNestedOneWithoutFilms_wishlistInput
    users: usersCreateNestedOneWithoutFilms_wishlistInput
  }

  export type films_wishlistUncheckedCreateInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type films_wishlistUpdateInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    medias?: mediasUpdateOneRequiredWithoutFilms_wishlistNestedInput
    users?: usersUpdateOneRequiredWithoutFilms_wishlistNestedInput
  }

  export type films_wishlistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type films_wishlistCreateManyInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type films_wishlistUpdateManyMutationInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type films_wishlistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type tv_shows_wishlistCreateInput = {
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
    medias: mediasCreateNestedOneWithoutTv_shows_wishlistInput
    users: usersCreateNestedOneWithoutTv_shows_wishlistInput
  }

  export type tv_shows_wishlistUncheckedCreateInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type tv_shows_wishlistUpdateInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    medias?: mediasUpdateOneRequiredWithoutTv_shows_wishlistNestedInput
    users?: usersUpdateOneRequiredWithoutTv_shows_wishlistNestedInput
  }

  export type tv_shows_wishlistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type tv_shows_wishlistCreateManyInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type tv_shows_wishlistUpdateManyMutationInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type tv_shows_wishlistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type watchingsCreateInput = {
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    medias: mediasCreateNestedOneWithoutWatchingsInput
    users: usersCreateNestedOneWithoutWatchingsInput
  }

  export type watchingsUncheckedCreateInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type watchingsUpdateInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    medias?: mediasUpdateOneRequiredWithoutWatchingsNestedInput
    users?: usersUpdateOneRequiredWithoutWatchingsNestedInput
  }

  export type watchingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type watchingsCreateManyInput = {
    id?: number
    medias_id: number
    user_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type watchingsUpdateManyMutationInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type watchingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type Books_wishlistListRelationFilter = {
    every?: books_wishlistWhereInput
    some?: books_wishlistWhereInput
    none?: books_wishlistWhereInput
  }

  export type Films_wishlistListRelationFilter = {
    every?: films_wishlistWhereInput
    some?: films_wishlistWhereInput
    none?: films_wishlistWhereInput
  }

  export type ReadingsListRelationFilter = {
    every?: readingsWhereInput
    some?: readingsWhereInput
    none?: readingsWhereInput
  }

  export type Tv_shows_wishlistListRelationFilter = {
    every?: tv_shows_wishlistWhereInput
    some?: tv_shows_wishlistWhereInput
    none?: tv_shows_wishlistWhereInput
  }

  export type WatchingsListRelationFilter = {
    every?: watchingsWhereInput
    some?: watchingsWhereInput
    none?: watchingsWhereInput
  }

  export type books_wishlistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type films_wishlistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type readingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tv_shows_wishlistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type watchingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mediasCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type mediasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type mediasMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type mediasMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type mediasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type DecimalFilter = {
    equals?: Decimal | DecimalJsLike | number | string
    in?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | DecimalJsLike | number | string
    lte?: Decimal | DecimalJsLike | number | string
    gt?: Decimal | DecimalJsLike | number | string
    gte?: Decimal | DecimalJsLike | number | string
    not?: NestedDecimalFilter | Decimal | DecimalJsLike | number | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type MediasRelationFilter = {
    is?: mediasWhereInput
    isNot?: mediasWhereInput
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type readingsCountOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    read_at?: SortOrder
  }

  export type readingsAvgOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    page_count?: SortOrder
  }

  export type readingsMaxOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    read_at?: SortOrder
  }

  export type readingsMinOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    review?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
    read_at?: SortOrder
  }

  export type readingsSumOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    grade?: SortOrder
    page_count?: SortOrder
  }

  export type DecimalWithAggregatesFilter = {
    equals?: Decimal | DecimalJsLike | number | string
    in?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | DecimalJsLike | number | string
    lte?: Decimal | DecimalJsLike | number | string
    gt?: Decimal | DecimalJsLike | number | string
    gte?: Decimal | DecimalJsLike | number | string
    not?: NestedDecimalWithAggregatesFilter | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter
    _avg?: NestedDecimalFilter
    _sum?: NestedDecimalFilter
    _min?: NestedDecimalFilter
    _max?: NestedDecimalFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type BoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type sessionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    active?: SortOrder
  }

  export type sessionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    active?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    active?: SortOrder
  }

  export type sessionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type BoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type SessionsListRelationFilter = {
    every?: sessionsWhereInput
    some?: sessionsWhereInput
    none?: sessionsWhereInput
  }

  export type sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type books_wishlistCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
  }

  export type books_wishlistAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    page_count?: SortOrder
  }

  export type books_wishlistMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
  }

  export type books_wishlistMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    book_api_id?: SortOrder
    title?: SortOrder
    author?: SortOrder
    description?: SortOrder
    img?: SortOrder
    page_count?: SortOrder
  }

  export type books_wishlistSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    medias_id?: SortOrder
    page_count?: SortOrder
  }

  export type FloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type films_wishlistCountOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    tagline?: SortOrder
    runtime?: SortOrder
    created_at?: SortOrder
    img?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type films_wishlistAvgOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    runtime?: SortOrder
    vote_average?: SortOrder
  }

  export type films_wishlistMaxOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    tagline?: SortOrder
    runtime?: SortOrder
    created_at?: SortOrder
    img?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type films_wishlistMinOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    tagline?: SortOrder
    runtime?: SortOrder
    created_at?: SortOrder
    img?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type films_wishlistSumOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    runtime?: SortOrder
    vote_average?: SortOrder
  }

  export type FloatWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedFloatFilter
    _min?: NestedFloatFilter
    _max?: NestedFloatFilter
  }

  export type tv_shows_wishlistCountOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    creator?: SortOrder
    seasons_number?: SortOrder
    tagline?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type tv_shows_wishlistAvgOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    seasons_number?: SortOrder
    vote_average?: SortOrder
  }

  export type tv_shows_wishlistMaxOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    creator?: SortOrder
    seasons_number?: SortOrder
    tagline?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type tv_shows_wishlistMinOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    creator?: SortOrder
    seasons_number?: SortOrder
    tagline?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    overview?: SortOrder
  }

  export type tv_shows_wishlistSumOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    seasons_number?: SortOrder
    vote_average?: SortOrder
  }

  export type watchingsCountOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    overview?: SortOrder
    release_date?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    watched_at?: SortOrder
    grade?: SortOrder
    review?: SortOrder
  }

  export type watchingsAvgOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    vote_average?: SortOrder
    grade?: SortOrder
  }

  export type watchingsMaxOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    overview?: SortOrder
    release_date?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    watched_at?: SortOrder
    grade?: SortOrder
    review?: SortOrder
  }

  export type watchingsMinOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    api_id?: SortOrder
    title?: SortOrder
    overview?: SortOrder
    release_date?: SortOrder
    img?: SortOrder
    created_at?: SortOrder
    vote_average?: SortOrder
    watched_at?: SortOrder
    grade?: SortOrder
    review?: SortOrder
  }

  export type watchingsSumOrderByAggregateInput = {
    id?: SortOrder
    medias_id?: SortOrder
    user_id?: SortOrder
    vote_average?: SortOrder
    grade?: SortOrder
  }

  export type books_wishlistCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutMediasInput>, Enumerable<books_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: books_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<books_wishlistWhereUniqueInput>
  }

  export type films_wishlistCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutMediasInput>, Enumerable<films_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: films_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<films_wishlistWhereUniqueInput>
  }

  export type readingsCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<readingsCreateWithoutMediasInput>, Enumerable<readingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutMediasInput>
    createMany?: readingsCreateManyMediasInputEnvelope
    connect?: Enumerable<readingsWhereUniqueInput>
  }

  export type tv_shows_wishlistCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutMediasInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: tv_shows_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
  }

  export type watchingsCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutMediasInput>, Enumerable<watchingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutMediasInput>
    createMany?: watchingsCreateManyMediasInputEnvelope
    connect?: Enumerable<watchingsWhereUniqueInput>
  }

  export type books_wishlistUncheckedCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutMediasInput>, Enumerable<books_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: books_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<books_wishlistWhereUniqueInput>
  }

  export type films_wishlistUncheckedCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutMediasInput>, Enumerable<films_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: films_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<films_wishlistWhereUniqueInput>
  }

  export type readingsUncheckedCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<readingsCreateWithoutMediasInput>, Enumerable<readingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutMediasInput>
    createMany?: readingsCreateManyMediasInputEnvelope
    connect?: Enumerable<readingsWhereUniqueInput>
  }

  export type tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutMediasInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutMediasInput>
    createMany?: tv_shows_wishlistCreateManyMediasInputEnvelope
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
  }

  export type watchingsUncheckedCreateNestedManyWithoutMediasInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutMediasInput>, Enumerable<watchingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutMediasInput>
    createMany?: watchingsCreateManyMediasInputEnvelope
    connect?: Enumerable<watchingsWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type books_wishlistUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutMediasInput>, Enumerable<books_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<books_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: books_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<books_wishlistWhereUniqueInput>
    disconnect?: Enumerable<books_wishlistWhereUniqueInput>
    delete?: Enumerable<books_wishlistWhereUniqueInput>
    connect?: Enumerable<books_wishlistWhereUniqueInput>
    update?: Enumerable<books_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<books_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<books_wishlistScalarWhereInput>
  }

  export type films_wishlistUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutMediasInput>, Enumerable<films_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<films_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: films_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<films_wishlistWhereUniqueInput>
    disconnect?: Enumerable<films_wishlistWhereUniqueInput>
    delete?: Enumerable<films_wishlistWhereUniqueInput>
    connect?: Enumerable<films_wishlistWhereUniqueInput>
    update?: Enumerable<films_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<films_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<films_wishlistScalarWhereInput>
  }

  export type readingsUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<readingsCreateWithoutMediasInput>, Enumerable<readingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<readingsUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: readingsCreateManyMediasInputEnvelope
    set?: Enumerable<readingsWhereUniqueInput>
    disconnect?: Enumerable<readingsWhereUniqueInput>
    delete?: Enumerable<readingsWhereUniqueInput>
    connect?: Enumerable<readingsWhereUniqueInput>
    update?: Enumerable<readingsUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<readingsUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<readingsScalarWhereInput>
  }

  export type tv_shows_wishlistUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutMediasInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<tv_shows_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: tv_shows_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    disconnect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    delete?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    update?: Enumerable<tv_shows_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<tv_shows_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<tv_shows_wishlistScalarWhereInput>
  }

  export type watchingsUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutMediasInput>, Enumerable<watchingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<watchingsUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: watchingsCreateManyMediasInputEnvelope
    set?: Enumerable<watchingsWhereUniqueInput>
    disconnect?: Enumerable<watchingsWhereUniqueInput>
    delete?: Enumerable<watchingsWhereUniqueInput>
    connect?: Enumerable<watchingsWhereUniqueInput>
    update?: Enumerable<watchingsUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<watchingsUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<watchingsScalarWhereInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type books_wishlistUncheckedUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutMediasInput>, Enumerable<books_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<books_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: books_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<books_wishlistWhereUniqueInput>
    disconnect?: Enumerable<books_wishlistWhereUniqueInput>
    delete?: Enumerable<books_wishlistWhereUniqueInput>
    connect?: Enumerable<books_wishlistWhereUniqueInput>
    update?: Enumerable<books_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<books_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<books_wishlistScalarWhereInput>
  }

  export type films_wishlistUncheckedUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutMediasInput>, Enumerable<films_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<films_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: films_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<films_wishlistWhereUniqueInput>
    disconnect?: Enumerable<films_wishlistWhereUniqueInput>
    delete?: Enumerable<films_wishlistWhereUniqueInput>
    connect?: Enumerable<films_wishlistWhereUniqueInput>
    update?: Enumerable<films_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<films_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<films_wishlistScalarWhereInput>
  }

  export type readingsUncheckedUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<readingsCreateWithoutMediasInput>, Enumerable<readingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<readingsUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: readingsCreateManyMediasInputEnvelope
    set?: Enumerable<readingsWhereUniqueInput>
    disconnect?: Enumerable<readingsWhereUniqueInput>
    delete?: Enumerable<readingsWhereUniqueInput>
    connect?: Enumerable<readingsWhereUniqueInput>
    update?: Enumerable<readingsUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<readingsUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<readingsScalarWhereInput>
  }

  export type tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutMediasInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<tv_shows_wishlistUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: tv_shows_wishlistCreateManyMediasInputEnvelope
    set?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    disconnect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    delete?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    update?: Enumerable<tv_shows_wishlistUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<tv_shows_wishlistUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<tv_shows_wishlistScalarWhereInput>
  }

  export type watchingsUncheckedUpdateManyWithoutMediasNestedInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutMediasInput>, Enumerable<watchingsUncheckedCreateWithoutMediasInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutMediasInput>
    upsert?: Enumerable<watchingsUpsertWithWhereUniqueWithoutMediasInput>
    createMany?: watchingsCreateManyMediasInputEnvelope
    set?: Enumerable<watchingsWhereUniqueInput>
    disconnect?: Enumerable<watchingsWhereUniqueInput>
    delete?: Enumerable<watchingsWhereUniqueInput>
    connect?: Enumerable<watchingsWhereUniqueInput>
    update?: Enumerable<watchingsUpdateWithWhereUniqueWithoutMediasInput>
    updateMany?: Enumerable<watchingsUpdateManyWithWhereWithoutMediasInput>
    deleteMany?: Enumerable<watchingsScalarWhereInput>
  }

  export type mediasCreateNestedOneWithoutReadingsInput = {
    create?: XOR<mediasCreateWithoutReadingsInput, mediasUncheckedCreateWithoutReadingsInput>
    connectOrCreate?: mediasCreateOrConnectWithoutReadingsInput
    connect?: mediasWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutReadingsInput = {
    create?: XOR<usersCreateWithoutReadingsInput, usersUncheckedCreateWithoutReadingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReadingsInput
    connect?: usersWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type mediasUpdateOneRequiredWithoutReadingsNestedInput = {
    create?: XOR<mediasCreateWithoutReadingsInput, mediasUncheckedCreateWithoutReadingsInput>
    connectOrCreate?: mediasCreateOrConnectWithoutReadingsInput
    upsert?: mediasUpsertWithoutReadingsInput
    connect?: mediasWhereUniqueInput
    update?: XOR<mediasUpdateWithoutReadingsInput, mediasUncheckedUpdateWithoutReadingsInput>
  }

  export type usersUpdateOneRequiredWithoutReadingsNestedInput = {
    create?: XOR<usersCreateWithoutReadingsInput, usersUncheckedCreateWithoutReadingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutReadingsInput
    upsert?: usersUpsertWithoutReadingsInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutReadingsInput, usersUncheckedUpdateWithoutReadingsInput>
  }

  export type usersCreateNestedOneWithoutSessionsInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    connect?: usersWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type usersUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    upsert?: usersUpsertWithoutSessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type books_wishlistCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutUsersInput>, Enumerable<books_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: books_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<books_wishlistWhereUniqueInput>
  }

  export type films_wishlistCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutUsersInput>, Enumerable<films_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: films_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<films_wishlistWhereUniqueInput>
  }

  export type readingsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<readingsCreateWithoutUsersInput>, Enumerable<readingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutUsersInput>
    createMany?: readingsCreateManyUsersInputEnvelope
    connect?: Enumerable<readingsWhereUniqueInput>
  }

  export type sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<sessionsCreateWithoutUsersInput>, Enumerable<sessionsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<sessionsCreateOrConnectWithoutUsersInput>
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: Enumerable<sessionsWhereUniqueInput>
  }

  export type tv_shows_wishlistCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutUsersInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: tv_shows_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
  }

  export type watchingsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutUsersInput>, Enumerable<watchingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutUsersInput>
    createMany?: watchingsCreateManyUsersInputEnvelope
    connect?: Enumerable<watchingsWhereUniqueInput>
  }

  export type books_wishlistUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutUsersInput>, Enumerable<books_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: books_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<books_wishlistWhereUniqueInput>
  }

  export type films_wishlistUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutUsersInput>, Enumerable<films_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: films_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<films_wishlistWhereUniqueInput>
  }

  export type readingsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<readingsCreateWithoutUsersInput>, Enumerable<readingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutUsersInput>
    createMany?: readingsCreateManyUsersInputEnvelope
    connect?: Enumerable<readingsWhereUniqueInput>
  }

  export type sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<sessionsCreateWithoutUsersInput>, Enumerable<sessionsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<sessionsCreateOrConnectWithoutUsersInput>
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: Enumerable<sessionsWhereUniqueInput>
  }

  export type tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutUsersInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutUsersInput>
    createMany?: tv_shows_wishlistCreateManyUsersInputEnvelope
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
  }

  export type watchingsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutUsersInput>, Enumerable<watchingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutUsersInput>
    createMany?: watchingsCreateManyUsersInputEnvelope
    connect?: Enumerable<watchingsWhereUniqueInput>
  }

  export type books_wishlistUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutUsersInput>, Enumerable<books_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<books_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: books_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<books_wishlistWhereUniqueInput>
    disconnect?: Enumerable<books_wishlistWhereUniqueInput>
    delete?: Enumerable<books_wishlistWhereUniqueInput>
    connect?: Enumerable<books_wishlistWhereUniqueInput>
    update?: Enumerable<books_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<books_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<books_wishlistScalarWhereInput>
  }

  export type films_wishlistUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutUsersInput>, Enumerable<films_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<films_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: films_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<films_wishlistWhereUniqueInput>
    disconnect?: Enumerable<films_wishlistWhereUniqueInput>
    delete?: Enumerable<films_wishlistWhereUniqueInput>
    connect?: Enumerable<films_wishlistWhereUniqueInput>
    update?: Enumerable<films_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<films_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<films_wishlistScalarWhereInput>
  }

  export type readingsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<readingsCreateWithoutUsersInput>, Enumerable<readingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<readingsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: readingsCreateManyUsersInputEnvelope
    set?: Enumerable<readingsWhereUniqueInput>
    disconnect?: Enumerable<readingsWhereUniqueInput>
    delete?: Enumerable<readingsWhereUniqueInput>
    connect?: Enumerable<readingsWhereUniqueInput>
    update?: Enumerable<readingsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<readingsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<readingsScalarWhereInput>
  }

  export type sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<sessionsCreateWithoutUsersInput>, Enumerable<sessionsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<sessionsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<sessionsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: Enumerable<sessionsWhereUniqueInput>
    disconnect?: Enumerable<sessionsWhereUniqueInput>
    delete?: Enumerable<sessionsWhereUniqueInput>
    connect?: Enumerable<sessionsWhereUniqueInput>
    update?: Enumerable<sessionsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<sessionsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<sessionsScalarWhereInput>
  }

  export type tv_shows_wishlistUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutUsersInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<tv_shows_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: tv_shows_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    disconnect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    delete?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    update?: Enumerable<tv_shows_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<tv_shows_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<tv_shows_wishlistScalarWhereInput>
  }

  export type watchingsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutUsersInput>, Enumerable<watchingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<watchingsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: watchingsCreateManyUsersInputEnvelope
    set?: Enumerable<watchingsWhereUniqueInput>
    disconnect?: Enumerable<watchingsWhereUniqueInput>
    delete?: Enumerable<watchingsWhereUniqueInput>
    connect?: Enumerable<watchingsWhereUniqueInput>
    update?: Enumerable<watchingsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<watchingsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<watchingsScalarWhereInput>
  }

  export type books_wishlistUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<books_wishlistCreateWithoutUsersInput>, Enumerable<books_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<books_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<books_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: books_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<books_wishlistWhereUniqueInput>
    disconnect?: Enumerable<books_wishlistWhereUniqueInput>
    delete?: Enumerable<books_wishlistWhereUniqueInput>
    connect?: Enumerable<books_wishlistWhereUniqueInput>
    update?: Enumerable<books_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<books_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<books_wishlistScalarWhereInput>
  }

  export type films_wishlistUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<films_wishlistCreateWithoutUsersInput>, Enumerable<films_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<films_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<films_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: films_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<films_wishlistWhereUniqueInput>
    disconnect?: Enumerable<films_wishlistWhereUniqueInput>
    delete?: Enumerable<films_wishlistWhereUniqueInput>
    connect?: Enumerable<films_wishlistWhereUniqueInput>
    update?: Enumerable<films_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<films_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<films_wishlistScalarWhereInput>
  }

  export type readingsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<readingsCreateWithoutUsersInput>, Enumerable<readingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<readingsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<readingsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: readingsCreateManyUsersInputEnvelope
    set?: Enumerable<readingsWhereUniqueInput>
    disconnect?: Enumerable<readingsWhereUniqueInput>
    delete?: Enumerable<readingsWhereUniqueInput>
    connect?: Enumerable<readingsWhereUniqueInput>
    update?: Enumerable<readingsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<readingsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<readingsScalarWhereInput>
  }

  export type sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<sessionsCreateWithoutUsersInput>, Enumerable<sessionsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<sessionsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<sessionsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: Enumerable<sessionsWhereUniqueInput>
    disconnect?: Enumerable<sessionsWhereUniqueInput>
    delete?: Enumerable<sessionsWhereUniqueInput>
    connect?: Enumerable<sessionsWhereUniqueInput>
    update?: Enumerable<sessionsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<sessionsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<sessionsScalarWhereInput>
  }

  export type tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<tv_shows_wishlistCreateWithoutUsersInput>, Enumerable<tv_shows_wishlistUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<tv_shows_wishlistCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<tv_shows_wishlistUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: tv_shows_wishlistCreateManyUsersInputEnvelope
    set?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    disconnect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    delete?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    connect?: Enumerable<tv_shows_wishlistWhereUniqueInput>
    update?: Enumerable<tv_shows_wishlistUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<tv_shows_wishlistUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<tv_shows_wishlistScalarWhereInput>
  }

  export type watchingsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<watchingsCreateWithoutUsersInput>, Enumerable<watchingsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<watchingsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<watchingsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: watchingsCreateManyUsersInputEnvelope
    set?: Enumerable<watchingsWhereUniqueInput>
    disconnect?: Enumerable<watchingsWhereUniqueInput>
    delete?: Enumerable<watchingsWhereUniqueInput>
    connect?: Enumerable<watchingsWhereUniqueInput>
    update?: Enumerable<watchingsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<watchingsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<watchingsScalarWhereInput>
  }

  export type usersCreateNestedOneWithoutBooks_wishlistInput = {
    create?: XOR<usersCreateWithoutBooks_wishlistInput, usersUncheckedCreateWithoutBooks_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutBooks_wishlistInput
    connect?: usersWhereUniqueInput
  }

  export type mediasCreateNestedOneWithoutBooks_wishlistInput = {
    create?: XOR<mediasCreateWithoutBooks_wishlistInput, mediasUncheckedCreateWithoutBooks_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutBooks_wishlistInput
    connect?: mediasWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutBooks_wishlistNestedInput = {
    create?: XOR<usersCreateWithoutBooks_wishlistInput, usersUncheckedCreateWithoutBooks_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutBooks_wishlistInput
    upsert?: usersUpsertWithoutBooks_wishlistInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutBooks_wishlistInput, usersUncheckedUpdateWithoutBooks_wishlistInput>
  }

  export type mediasUpdateOneRequiredWithoutBooks_wishlistNestedInput = {
    create?: XOR<mediasCreateWithoutBooks_wishlistInput, mediasUncheckedCreateWithoutBooks_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutBooks_wishlistInput
    upsert?: mediasUpsertWithoutBooks_wishlistInput
    connect?: mediasWhereUniqueInput
    update?: XOR<mediasUpdateWithoutBooks_wishlistInput, mediasUncheckedUpdateWithoutBooks_wishlistInput>
  }

  export type mediasCreateNestedOneWithoutFilms_wishlistInput = {
    create?: XOR<mediasCreateWithoutFilms_wishlistInput, mediasUncheckedCreateWithoutFilms_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutFilms_wishlistInput
    connect?: mediasWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutFilms_wishlistInput = {
    create?: XOR<usersCreateWithoutFilms_wishlistInput, usersUncheckedCreateWithoutFilms_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutFilms_wishlistInput
    connect?: usersWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type mediasUpdateOneRequiredWithoutFilms_wishlistNestedInput = {
    create?: XOR<mediasCreateWithoutFilms_wishlistInput, mediasUncheckedCreateWithoutFilms_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutFilms_wishlistInput
    upsert?: mediasUpsertWithoutFilms_wishlistInput
    connect?: mediasWhereUniqueInput
    update?: XOR<mediasUpdateWithoutFilms_wishlistInput, mediasUncheckedUpdateWithoutFilms_wishlistInput>
  }

  export type usersUpdateOneRequiredWithoutFilms_wishlistNestedInput = {
    create?: XOR<usersCreateWithoutFilms_wishlistInput, usersUncheckedCreateWithoutFilms_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutFilms_wishlistInput
    upsert?: usersUpsertWithoutFilms_wishlistInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutFilms_wishlistInput, usersUncheckedUpdateWithoutFilms_wishlistInput>
  }

  export type mediasCreateNestedOneWithoutTv_shows_wishlistInput = {
    create?: XOR<mediasCreateWithoutTv_shows_wishlistInput, mediasUncheckedCreateWithoutTv_shows_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutTv_shows_wishlistInput
    connect?: mediasWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutTv_shows_wishlistInput = {
    create?: XOR<usersCreateWithoutTv_shows_wishlistInput, usersUncheckedCreateWithoutTv_shows_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutTv_shows_wishlistInput
    connect?: usersWhereUniqueInput
  }

  export type mediasUpdateOneRequiredWithoutTv_shows_wishlistNestedInput = {
    create?: XOR<mediasCreateWithoutTv_shows_wishlistInput, mediasUncheckedCreateWithoutTv_shows_wishlistInput>
    connectOrCreate?: mediasCreateOrConnectWithoutTv_shows_wishlistInput
    upsert?: mediasUpsertWithoutTv_shows_wishlistInput
    connect?: mediasWhereUniqueInput
    update?: XOR<mediasUpdateWithoutTv_shows_wishlistInput, mediasUncheckedUpdateWithoutTv_shows_wishlistInput>
  }

  export type usersUpdateOneRequiredWithoutTv_shows_wishlistNestedInput = {
    create?: XOR<usersCreateWithoutTv_shows_wishlistInput, usersUncheckedCreateWithoutTv_shows_wishlistInput>
    connectOrCreate?: usersCreateOrConnectWithoutTv_shows_wishlistInput
    upsert?: usersUpsertWithoutTv_shows_wishlistInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutTv_shows_wishlistInput, usersUncheckedUpdateWithoutTv_shows_wishlistInput>
  }

  export type mediasCreateNestedOneWithoutWatchingsInput = {
    create?: XOR<mediasCreateWithoutWatchingsInput, mediasUncheckedCreateWithoutWatchingsInput>
    connectOrCreate?: mediasCreateOrConnectWithoutWatchingsInput
    connect?: mediasWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutWatchingsInput = {
    create?: XOR<usersCreateWithoutWatchingsInput, usersUncheckedCreateWithoutWatchingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutWatchingsInput
    connect?: usersWhereUniqueInput
  }

  export type mediasUpdateOneRequiredWithoutWatchingsNestedInput = {
    create?: XOR<mediasCreateWithoutWatchingsInput, mediasUncheckedCreateWithoutWatchingsInput>
    connectOrCreate?: mediasCreateOrConnectWithoutWatchingsInput
    upsert?: mediasUpsertWithoutWatchingsInput
    connect?: mediasWhereUniqueInput
    update?: XOR<mediasUpdateWithoutWatchingsInput, mediasUncheckedUpdateWithoutWatchingsInput>
  }

  export type usersUpdateOneRequiredWithoutWatchingsNestedInput = {
    create?: XOR<usersCreateWithoutWatchingsInput, usersUncheckedCreateWithoutWatchingsInput>
    connectOrCreate?: usersCreateOrConnectWithoutWatchingsInput
    upsert?: usersUpsertWithoutWatchingsInput
    connect?: usersWhereUniqueInput
    update?: XOR<usersUpdateWithoutWatchingsInput, usersUncheckedUpdateWithoutWatchingsInput>
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedDecimalFilter = {
    equals?: Decimal | DecimalJsLike | number | string
    in?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | DecimalJsLike | number | string
    lte?: Decimal | DecimalJsLike | number | string
    gt?: Decimal | DecimalJsLike | number | string
    gte?: Decimal | DecimalJsLike | number | string
    not?: NestedDecimalFilter | Decimal | DecimalJsLike | number | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedDecimalWithAggregatesFilter = {
    equals?: Decimal | DecimalJsLike | number | string
    in?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    notIn?: Enumerable<Decimal> | Enumerable<DecimalJsLike> | Enumerable<number> | Enumerable<string>
    lt?: Decimal | DecimalJsLike | number | string
    lte?: Decimal | DecimalJsLike | number | string
    gt?: Decimal | DecimalJsLike | number | string
    gte?: Decimal | DecimalJsLike | number | string
    not?: NestedDecimalWithAggregatesFilter | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter
    _avg?: NestedDecimalFilter
    _sum?: NestedDecimalFilter
    _min?: NestedDecimalFilter
    _max?: NestedDecimalFilter
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedBoolFilter = {
    equals?: boolean
    not?: NestedBoolFilter | boolean
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedBoolWithAggregatesFilter = {
    equals?: boolean
    not?: NestedBoolWithAggregatesFilter | boolean
    _count?: NestedIntFilter
    _min?: NestedBoolFilter
    _max?: NestedBoolFilter
  }

  export type NestedFloatWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedFloatFilter
    _min?: NestedFloatFilter
    _max?: NestedFloatFilter
  }

  export type books_wishlistCreateWithoutMediasInput = {
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
    users: usersCreateNestedOneWithoutBooks_wishlistInput
  }

  export type books_wishlistUncheckedCreateWithoutMediasInput = {
    id?: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type books_wishlistCreateOrConnectWithoutMediasInput = {
    where: books_wishlistWhereUniqueInput
    create: XOR<books_wishlistCreateWithoutMediasInput, books_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type books_wishlistCreateManyMediasInputEnvelope = {
    data: Enumerable<books_wishlistCreateManyMediasInput>
    skipDuplicates?: boolean
  }

  export type films_wishlistCreateWithoutMediasInput = {
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
    users: usersCreateNestedOneWithoutFilms_wishlistInput
  }

  export type films_wishlistUncheckedCreateWithoutMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type films_wishlistCreateOrConnectWithoutMediasInput = {
    where: films_wishlistWhereUniqueInput
    create: XOR<films_wishlistCreateWithoutMediasInput, films_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type films_wishlistCreateManyMediasInputEnvelope = {
    data: Enumerable<films_wishlistCreateManyMediasInput>
    skipDuplicates?: boolean
  }

  export type readingsCreateWithoutMediasInput = {
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
    users: usersCreateNestedOneWithoutReadingsInput
  }

  export type readingsUncheckedCreateWithoutMediasInput = {
    id?: number
    user_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type readingsCreateOrConnectWithoutMediasInput = {
    where: readingsWhereUniqueInput
    create: XOR<readingsCreateWithoutMediasInput, readingsUncheckedCreateWithoutMediasInput>
  }

  export type readingsCreateManyMediasInputEnvelope = {
    data: Enumerable<readingsCreateManyMediasInput>
    skipDuplicates?: boolean
  }

  export type tv_shows_wishlistCreateWithoutMediasInput = {
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
    users: usersCreateNestedOneWithoutTv_shows_wishlistInput
  }

  export type tv_shows_wishlistUncheckedCreateWithoutMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type tv_shows_wishlistCreateOrConnectWithoutMediasInput = {
    where: tv_shows_wishlistWhereUniqueInput
    create: XOR<tv_shows_wishlistCreateWithoutMediasInput, tv_shows_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type tv_shows_wishlistCreateManyMediasInputEnvelope = {
    data: Enumerable<tv_shows_wishlistCreateManyMediasInput>
    skipDuplicates?: boolean
  }

  export type watchingsCreateWithoutMediasInput = {
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    users: usersCreateNestedOneWithoutWatchingsInput
  }

  export type watchingsUncheckedCreateWithoutMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type watchingsCreateOrConnectWithoutMediasInput = {
    where: watchingsWhereUniqueInput
    create: XOR<watchingsCreateWithoutMediasInput, watchingsUncheckedCreateWithoutMediasInput>
  }

  export type watchingsCreateManyMediasInputEnvelope = {
    data: Enumerable<watchingsCreateManyMediasInput>
    skipDuplicates?: boolean
  }

  export type books_wishlistUpsertWithWhereUniqueWithoutMediasInput = {
    where: books_wishlistWhereUniqueInput
    update: XOR<books_wishlistUpdateWithoutMediasInput, books_wishlistUncheckedUpdateWithoutMediasInput>
    create: XOR<books_wishlistCreateWithoutMediasInput, books_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type books_wishlistUpdateWithWhereUniqueWithoutMediasInput = {
    where: books_wishlistWhereUniqueInput
    data: XOR<books_wishlistUpdateWithoutMediasInput, books_wishlistUncheckedUpdateWithoutMediasInput>
  }

  export type books_wishlistUpdateManyWithWhereWithoutMediasInput = {
    where: books_wishlistScalarWhereInput
    data: XOR<books_wishlistUpdateManyMutationInput, books_wishlistUncheckedUpdateManyWithoutBooks_wishlistInput>
  }

  export type books_wishlistScalarWhereInput = {
    AND?: Enumerable<books_wishlistScalarWhereInput>
    OR?: Enumerable<books_wishlistScalarWhereInput>
    NOT?: Enumerable<books_wishlistScalarWhereInput>
    id?: IntFilter | number
    user_id?: IntFilter | number
    medias_id?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeNullableFilter | Date | string | null
    book_api_id?: StringFilter | string
    title?: StringFilter | string
    author?: StringFilter | string
    description?: StringFilter | string
    img?: StringFilter | string
    page_count?: IntFilter | number
  }

  export type films_wishlistUpsertWithWhereUniqueWithoutMediasInput = {
    where: films_wishlistWhereUniqueInput
    update: XOR<films_wishlistUpdateWithoutMediasInput, films_wishlistUncheckedUpdateWithoutMediasInput>
    create: XOR<films_wishlistCreateWithoutMediasInput, films_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type films_wishlistUpdateWithWhereUniqueWithoutMediasInput = {
    where: films_wishlistWhereUniqueInput
    data: XOR<films_wishlistUpdateWithoutMediasInput, films_wishlistUncheckedUpdateWithoutMediasInput>
  }

  export type films_wishlistUpdateManyWithWhereWithoutMediasInput = {
    where: films_wishlistScalarWhereInput
    data: XOR<films_wishlistUpdateManyMutationInput, films_wishlistUncheckedUpdateManyWithoutFilms_wishlistInput>
  }

  export type films_wishlistScalarWhereInput = {
    AND?: Enumerable<films_wishlistScalarWhereInput>
    OR?: Enumerable<films_wishlistScalarWhereInput>
    NOT?: Enumerable<films_wishlistScalarWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    tagline?: StringFilter | string
    runtime?: IntFilter | number
    created_at?: DateTimeFilter | Date | string
    img?: StringFilter | string
    vote_average?: FloatFilter | number
    overview?: StringFilter | string
  }

  export type readingsUpsertWithWhereUniqueWithoutMediasInput = {
    where: readingsWhereUniqueInput
    update: XOR<readingsUpdateWithoutMediasInput, readingsUncheckedUpdateWithoutMediasInput>
    create: XOR<readingsCreateWithoutMediasInput, readingsUncheckedCreateWithoutMediasInput>
  }

  export type readingsUpdateWithWhereUniqueWithoutMediasInput = {
    where: readingsWhereUniqueInput
    data: XOR<readingsUpdateWithoutMediasInput, readingsUncheckedUpdateWithoutMediasInput>
  }

  export type readingsUpdateManyWithWhereWithoutMediasInput = {
    where: readingsScalarWhereInput
    data: XOR<readingsUpdateManyMutationInput, readingsUncheckedUpdateManyWithoutReadingsInput>
  }

  export type readingsScalarWhereInput = {
    AND?: Enumerable<readingsScalarWhereInput>
    OR?: Enumerable<readingsScalarWhereInput>
    NOT?: Enumerable<readingsScalarWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    grade?: DecimalFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableFilter | string | null
    book_api_id?: StringFilter | string
    title?: StringFilter | string
    author?: StringFilter | string
    description?: StringNullableFilter | string | null
    img?: StringFilter | string
    page_count?: IntFilter | number
    read_at?: DateTimeFilter | Date | string
  }

  export type tv_shows_wishlistUpsertWithWhereUniqueWithoutMediasInput = {
    where: tv_shows_wishlistWhereUniqueInput
    update: XOR<tv_shows_wishlistUpdateWithoutMediasInput, tv_shows_wishlistUncheckedUpdateWithoutMediasInput>
    create: XOR<tv_shows_wishlistCreateWithoutMediasInput, tv_shows_wishlistUncheckedCreateWithoutMediasInput>
  }

  export type tv_shows_wishlistUpdateWithWhereUniqueWithoutMediasInput = {
    where: tv_shows_wishlistWhereUniqueInput
    data: XOR<tv_shows_wishlistUpdateWithoutMediasInput, tv_shows_wishlistUncheckedUpdateWithoutMediasInput>
  }

  export type tv_shows_wishlistUpdateManyWithWhereWithoutMediasInput = {
    where: tv_shows_wishlistScalarWhereInput
    data: XOR<tv_shows_wishlistUpdateManyMutationInput, tv_shows_wishlistUncheckedUpdateManyWithoutTv_shows_wishlistInput>
  }

  export type tv_shows_wishlistScalarWhereInput = {
    AND?: Enumerable<tv_shows_wishlistScalarWhereInput>
    OR?: Enumerable<tv_shows_wishlistScalarWhereInput>
    NOT?: Enumerable<tv_shows_wishlistScalarWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    creator?: StringFilter | string
    seasons_number?: IntFilter | number
    tagline?: StringFilter | string
    img?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    vote_average?: FloatFilter | number
    overview?: StringFilter | string
  }

  export type watchingsUpsertWithWhereUniqueWithoutMediasInput = {
    where: watchingsWhereUniqueInput
    update: XOR<watchingsUpdateWithoutMediasInput, watchingsUncheckedUpdateWithoutMediasInput>
    create: XOR<watchingsCreateWithoutMediasInput, watchingsUncheckedCreateWithoutMediasInput>
  }

  export type watchingsUpdateWithWhereUniqueWithoutMediasInput = {
    where: watchingsWhereUniqueInput
    data: XOR<watchingsUpdateWithoutMediasInput, watchingsUncheckedUpdateWithoutMediasInput>
  }

  export type watchingsUpdateManyWithWhereWithoutMediasInput = {
    where: watchingsScalarWhereInput
    data: XOR<watchingsUpdateManyMutationInput, watchingsUncheckedUpdateManyWithoutWatchingsInput>
  }

  export type watchingsScalarWhereInput = {
    AND?: Enumerable<watchingsScalarWhereInput>
    OR?: Enumerable<watchingsScalarWhereInput>
    NOT?: Enumerable<watchingsScalarWhereInput>
    id?: IntFilter | number
    medias_id?: IntFilter | number
    user_id?: IntFilter | number
    api_id?: StringFilter | string
    title?: StringFilter | string
    overview?: StringFilter | string
    release_date?: StringFilter | string
    img?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    vote_average?: FloatFilter | number
    watched_at?: DateTimeFilter | Date | string
    grade?: DecimalFilter | Decimal | DecimalJsLike | number | string
    review?: StringNullableFilter | string | null
  }

  export type mediasCreateWithoutReadingsInput = {
    name: string
    books_wishlist?: books_wishlistCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutMediasInput
    watchings?: watchingsCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateWithoutReadingsInput = {
    id?: number
    name: string
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasCreateOrConnectWithoutReadingsInput = {
    where: mediasWhereUniqueInput
    create: XOR<mediasCreateWithoutReadingsInput, mediasUncheckedCreateWithoutReadingsInput>
  }

  export type usersCreateWithoutReadingsInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReadingsInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReadingsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReadingsInput, usersUncheckedCreateWithoutReadingsInput>
  }

  export type mediasUpsertWithoutReadingsInput = {
    update: XOR<mediasUpdateWithoutReadingsInput, mediasUncheckedUpdateWithoutReadingsInput>
    create: XOR<mediasCreateWithoutReadingsInput, mediasUncheckedCreateWithoutReadingsInput>
  }

  export type mediasUpdateWithoutReadingsInput = {
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateWithoutReadingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type usersUpsertWithoutReadingsInput = {
    update: XOR<usersUpdateWithoutReadingsInput, usersUncheckedUpdateWithoutReadingsInput>
    create: XOR<usersCreateWithoutReadingsInput, usersUncheckedCreateWithoutReadingsInput>
  }

  export type usersUpdateWithoutReadingsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReadingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutSessionsInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSessionsInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
  }

  export type usersUpsertWithoutSessionsInput = {
    update: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
  }

  export type usersUpdateWithoutSessionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSessionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type books_wishlistCreateWithoutUsersInput = {
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
    medias: mediasCreateNestedOneWithoutBooks_wishlistInput
  }

  export type books_wishlistUncheckedCreateWithoutUsersInput = {
    id?: number
    medias_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type books_wishlistCreateOrConnectWithoutUsersInput = {
    where: books_wishlistWhereUniqueInput
    create: XOR<books_wishlistCreateWithoutUsersInput, books_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type books_wishlistCreateManyUsersInputEnvelope = {
    data: Enumerable<books_wishlistCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type films_wishlistCreateWithoutUsersInput = {
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
    medias: mediasCreateNestedOneWithoutFilms_wishlistInput
  }

  export type films_wishlistUncheckedCreateWithoutUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type films_wishlistCreateOrConnectWithoutUsersInput = {
    where: films_wishlistWhereUniqueInput
    create: XOR<films_wishlistCreateWithoutUsersInput, films_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type films_wishlistCreateManyUsersInputEnvelope = {
    data: Enumerable<films_wishlistCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type readingsCreateWithoutUsersInput = {
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
    medias: mediasCreateNestedOneWithoutReadingsInput
  }

  export type readingsUncheckedCreateWithoutUsersInput = {
    id?: number
    medias_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type readingsCreateOrConnectWithoutUsersInput = {
    where: readingsWhereUniqueInput
    create: XOR<readingsCreateWithoutUsersInput, readingsUncheckedCreateWithoutUsersInput>
  }

  export type readingsCreateManyUsersInputEnvelope = {
    data: Enumerable<readingsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type sessionsCreateWithoutUsersInput = {
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
  }

  export type sessionsUncheckedCreateWithoutUsersInput = {
    id?: number
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
  }

  export type sessionsCreateOrConnectWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsCreateManyUsersInputEnvelope = {
    data: Enumerable<sessionsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type tv_shows_wishlistCreateWithoutUsersInput = {
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
    medias: mediasCreateNestedOneWithoutTv_shows_wishlistInput
  }

  export type tv_shows_wishlistUncheckedCreateWithoutUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type tv_shows_wishlistCreateOrConnectWithoutUsersInput = {
    where: tv_shows_wishlistWhereUniqueInput
    create: XOR<tv_shows_wishlistCreateWithoutUsersInput, tv_shows_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type tv_shows_wishlistCreateManyUsersInputEnvelope = {
    data: Enumerable<tv_shows_wishlistCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type watchingsCreateWithoutUsersInput = {
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    medias: mediasCreateNestedOneWithoutWatchingsInput
  }

  export type watchingsUncheckedCreateWithoutUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type watchingsCreateOrConnectWithoutUsersInput = {
    where: watchingsWhereUniqueInput
    create: XOR<watchingsCreateWithoutUsersInput, watchingsUncheckedCreateWithoutUsersInput>
  }

  export type watchingsCreateManyUsersInputEnvelope = {
    data: Enumerable<watchingsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type books_wishlistUpsertWithWhereUniqueWithoutUsersInput = {
    where: books_wishlistWhereUniqueInput
    update: XOR<books_wishlistUpdateWithoutUsersInput, books_wishlistUncheckedUpdateWithoutUsersInput>
    create: XOR<books_wishlistCreateWithoutUsersInput, books_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type books_wishlistUpdateWithWhereUniqueWithoutUsersInput = {
    where: books_wishlistWhereUniqueInput
    data: XOR<books_wishlistUpdateWithoutUsersInput, books_wishlistUncheckedUpdateWithoutUsersInput>
  }

  export type books_wishlistUpdateManyWithWhereWithoutUsersInput = {
    where: books_wishlistScalarWhereInput
    data: XOR<books_wishlistUpdateManyMutationInput, books_wishlistUncheckedUpdateManyWithoutBooks_wishlistInput>
  }

  export type films_wishlistUpsertWithWhereUniqueWithoutUsersInput = {
    where: films_wishlistWhereUniqueInput
    update: XOR<films_wishlistUpdateWithoutUsersInput, films_wishlistUncheckedUpdateWithoutUsersInput>
    create: XOR<films_wishlistCreateWithoutUsersInput, films_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type films_wishlistUpdateWithWhereUniqueWithoutUsersInput = {
    where: films_wishlistWhereUniqueInput
    data: XOR<films_wishlistUpdateWithoutUsersInput, films_wishlistUncheckedUpdateWithoutUsersInput>
  }

  export type films_wishlistUpdateManyWithWhereWithoutUsersInput = {
    where: films_wishlistScalarWhereInput
    data: XOR<films_wishlistUpdateManyMutationInput, films_wishlistUncheckedUpdateManyWithoutFilms_wishlistInput>
  }

  export type readingsUpsertWithWhereUniqueWithoutUsersInput = {
    where: readingsWhereUniqueInput
    update: XOR<readingsUpdateWithoutUsersInput, readingsUncheckedUpdateWithoutUsersInput>
    create: XOR<readingsCreateWithoutUsersInput, readingsUncheckedCreateWithoutUsersInput>
  }

  export type readingsUpdateWithWhereUniqueWithoutUsersInput = {
    where: readingsWhereUniqueInput
    data: XOR<readingsUpdateWithoutUsersInput, readingsUncheckedUpdateWithoutUsersInput>
  }

  export type readingsUpdateManyWithWhereWithoutUsersInput = {
    where: readingsScalarWhereInput
    data: XOR<readingsUpdateManyMutationInput, readingsUncheckedUpdateManyWithoutReadingsInput>
  }

  export type sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    update: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    data: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: sessionsScalarWhereInput
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyWithoutSessionsInput>
  }

  export type sessionsScalarWhereInput = {
    AND?: Enumerable<sessionsScalarWhereInput>
    OR?: Enumerable<sessionsScalarWhereInput>
    NOT?: Enumerable<sessionsScalarWhereInput>
    id?: IntFilter | number
    user_id?: IntFilter | number
    token?: StringFilter | string
    created_at?: DateTimeFilter | Date | string
    updated_at?: DateTimeNullableFilter | Date | string | null
    active?: BoolFilter | boolean
  }

  export type tv_shows_wishlistUpsertWithWhereUniqueWithoutUsersInput = {
    where: tv_shows_wishlistWhereUniqueInput
    update: XOR<tv_shows_wishlistUpdateWithoutUsersInput, tv_shows_wishlistUncheckedUpdateWithoutUsersInput>
    create: XOR<tv_shows_wishlistCreateWithoutUsersInput, tv_shows_wishlistUncheckedCreateWithoutUsersInput>
  }

  export type tv_shows_wishlistUpdateWithWhereUniqueWithoutUsersInput = {
    where: tv_shows_wishlistWhereUniqueInput
    data: XOR<tv_shows_wishlistUpdateWithoutUsersInput, tv_shows_wishlistUncheckedUpdateWithoutUsersInput>
  }

  export type tv_shows_wishlistUpdateManyWithWhereWithoutUsersInput = {
    where: tv_shows_wishlistScalarWhereInput
    data: XOR<tv_shows_wishlistUpdateManyMutationInput, tv_shows_wishlistUncheckedUpdateManyWithoutTv_shows_wishlistInput>
  }

  export type watchingsUpsertWithWhereUniqueWithoutUsersInput = {
    where: watchingsWhereUniqueInput
    update: XOR<watchingsUpdateWithoutUsersInput, watchingsUncheckedUpdateWithoutUsersInput>
    create: XOR<watchingsCreateWithoutUsersInput, watchingsUncheckedCreateWithoutUsersInput>
  }

  export type watchingsUpdateWithWhereUniqueWithoutUsersInput = {
    where: watchingsWhereUniqueInput
    data: XOR<watchingsUpdateWithoutUsersInput, watchingsUncheckedUpdateWithoutUsersInput>
  }

  export type watchingsUpdateManyWithWhereWithoutUsersInput = {
    where: watchingsScalarWhereInput
    data: XOR<watchingsUpdateManyMutationInput, watchingsUncheckedUpdateManyWithoutWatchingsInput>
  }

  export type usersCreateWithoutBooks_wishlistInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutBooks_wishlistInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutBooks_wishlistInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutBooks_wishlistInput, usersUncheckedCreateWithoutBooks_wishlistInput>
  }

  export type mediasCreateWithoutBooks_wishlistInput = {
    name: string
    films_wishlist?: films_wishlistCreateNestedManyWithoutMediasInput
    readings?: readingsCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutMediasInput
    watchings?: watchingsCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateWithoutBooks_wishlistInput = {
    id?: number
    name: string
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutMediasInput
    readings?: readingsUncheckedCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasCreateOrConnectWithoutBooks_wishlistInput = {
    where: mediasWhereUniqueInput
    create: XOR<mediasCreateWithoutBooks_wishlistInput, mediasUncheckedCreateWithoutBooks_wishlistInput>
  }

  export type usersUpsertWithoutBooks_wishlistInput = {
    update: XOR<usersUpdateWithoutBooks_wishlistInput, usersUncheckedUpdateWithoutBooks_wishlistInput>
    create: XOR<usersCreateWithoutBooks_wishlistInput, usersUncheckedCreateWithoutBooks_wishlistInput>
  }

  export type usersUpdateWithoutBooks_wishlistInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutBooks_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type mediasUpsertWithoutBooks_wishlistInput = {
    update: XOR<mediasUpdateWithoutBooks_wishlistInput, mediasUncheckedUpdateWithoutBooks_wishlistInput>
    create: XOR<mediasCreateWithoutBooks_wishlistInput, mediasUncheckedCreateWithoutBooks_wishlistInput>
  }

  export type mediasUpdateWithoutBooks_wishlistInput = {
    name?: StringFieldUpdateOperationsInput | string
    films_wishlist?: films_wishlistUpdateManyWithoutMediasNestedInput
    readings?: readingsUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateWithoutBooks_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    readings?: readingsUncheckedUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type mediasCreateWithoutFilms_wishlistInput = {
    name: string
    books_wishlist?: books_wishlistCreateNestedManyWithoutMediasInput
    readings?: readingsCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutMediasInput
    watchings?: watchingsCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateWithoutFilms_wishlistInput = {
    id?: number
    name: string
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutMediasInput
    readings?: readingsUncheckedCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasCreateOrConnectWithoutFilms_wishlistInput = {
    where: mediasWhereUniqueInput
    create: XOR<mediasCreateWithoutFilms_wishlistInput, mediasUncheckedCreateWithoutFilms_wishlistInput>
  }

  export type usersCreateWithoutFilms_wishlistInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFilms_wishlistInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFilms_wishlistInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFilms_wishlistInput, usersUncheckedCreateWithoutFilms_wishlistInput>
  }

  export type mediasUpsertWithoutFilms_wishlistInput = {
    update: XOR<mediasUpdateWithoutFilms_wishlistInput, mediasUncheckedUpdateWithoutFilms_wishlistInput>
    create: XOR<mediasCreateWithoutFilms_wishlistInput, mediasUncheckedCreateWithoutFilms_wishlistInput>
  }

  export type mediasUpdateWithoutFilms_wishlistInput = {
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUpdateManyWithoutMediasNestedInput
    readings?: readingsUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateWithoutFilms_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    readings?: readingsUncheckedUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type usersUpsertWithoutFilms_wishlistInput = {
    update: XOR<usersUpdateWithoutFilms_wishlistInput, usersUncheckedUpdateWithoutFilms_wishlistInput>
    create: XOR<usersCreateWithoutFilms_wishlistInput, usersUncheckedCreateWithoutFilms_wishlistInput>
  }

  export type usersUpdateWithoutFilms_wishlistInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFilms_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type mediasCreateWithoutTv_shows_wishlistInput = {
    name: string
    books_wishlist?: books_wishlistCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutMediasInput
    readings?: readingsCreateNestedManyWithoutMediasInput
    watchings?: watchingsCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateWithoutTv_shows_wishlistInput = {
    id?: number
    name: string
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutMediasInput
    readings?: readingsUncheckedCreateNestedManyWithoutMediasInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasCreateOrConnectWithoutTv_shows_wishlistInput = {
    where: mediasWhereUniqueInput
    create: XOR<mediasCreateWithoutTv_shows_wishlistInput, mediasUncheckedCreateWithoutTv_shows_wishlistInput>
  }

  export type usersCreateWithoutTv_shows_wishlistInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    watchings?: watchingsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutTv_shows_wishlistInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    watchings?: watchingsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutTv_shows_wishlistInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutTv_shows_wishlistInput, usersUncheckedCreateWithoutTv_shows_wishlistInput>
  }

  export type mediasUpsertWithoutTv_shows_wishlistInput = {
    update: XOR<mediasUpdateWithoutTv_shows_wishlistInput, mediasUncheckedUpdateWithoutTv_shows_wishlistInput>
    create: XOR<mediasCreateWithoutTv_shows_wishlistInput, mediasUncheckedCreateWithoutTv_shows_wishlistInput>
  }

  export type mediasUpdateWithoutTv_shows_wishlistInput = {
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutMediasNestedInput
    readings?: readingsUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateWithoutTv_shows_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    readings?: readingsUncheckedUpdateManyWithoutMediasNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type usersUpsertWithoutTv_shows_wishlistInput = {
    update: XOR<usersUpdateWithoutTv_shows_wishlistInput, usersUncheckedUpdateWithoutTv_shows_wishlistInput>
    create: XOR<usersCreateWithoutTv_shows_wishlistInput, usersUncheckedCreateWithoutTv_shows_wishlistInput>
  }

  export type usersUpdateWithoutTv_shows_wishlistInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutTv_shows_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    watchings?: watchingsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type mediasCreateWithoutWatchingsInput = {
    name: string
    books_wishlist?: books_wishlistCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutMediasInput
    readings?: readingsCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutMediasInput
  }

  export type mediasUncheckedCreateWithoutWatchingsInput = {
    id?: number
    name: string
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutMediasInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutMediasInput
    readings?: readingsUncheckedCreateNestedManyWithoutMediasInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutMediasInput
  }

  export type mediasCreateOrConnectWithoutWatchingsInput = {
    where: mediasWhereUniqueInput
    create: XOR<mediasCreateWithoutWatchingsInput, mediasUncheckedCreateWithoutWatchingsInput>
  }

  export type usersCreateWithoutWatchingsInput = {
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistCreateNestedManyWithoutUsersInput
    readings?: readingsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutWatchingsInput = {
    id?: number
    email: string
    password: string
    created_at?: Date | string
    updated_at?: Date | string | null
    books_wishlist?: books_wishlistUncheckedCreateNestedManyWithoutUsersInput
    films_wishlist?: films_wishlistUncheckedCreateNestedManyWithoutUsersInput
    readings?: readingsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutWatchingsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutWatchingsInput, usersUncheckedCreateWithoutWatchingsInput>
  }

  export type mediasUpsertWithoutWatchingsInput = {
    update: XOR<mediasUpdateWithoutWatchingsInput, mediasUncheckedUpdateWithoutWatchingsInput>
    create: XOR<mediasCreateWithoutWatchingsInput, mediasUncheckedCreateWithoutWatchingsInput>
  }

  export type mediasUpdateWithoutWatchingsInput = {
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutMediasNestedInput
    readings?: readingsUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutMediasNestedInput
  }

  export type mediasUncheckedUpdateWithoutWatchingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutMediasNestedInput
    readings?: readingsUncheckedUpdateManyWithoutMediasNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutMediasNestedInput
  }

  export type usersUpsertWithoutWatchingsInput = {
    update: XOR<usersUpdateWithoutWatchingsInput, usersUncheckedUpdateWithoutWatchingsInput>
    create: XOR<usersCreateWithoutWatchingsInput, usersUncheckedCreateWithoutWatchingsInput>
  }

  export type usersUpdateWithoutWatchingsInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUpdateManyWithoutUsersNestedInput
    readings?: readingsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutWatchingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    books_wishlist?: books_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    films_wishlist?: films_wishlistUncheckedUpdateManyWithoutUsersNestedInput
    readings?: readingsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    tv_shows_wishlist?: tv_shows_wishlistUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type books_wishlistCreateManyMediasInput = {
    id?: number
    user_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type films_wishlistCreateManyMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type readingsCreateManyMediasInput = {
    id?: number
    user_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type tv_shows_wishlistCreateManyMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type watchingsCreateManyMediasInput = {
    id?: number
    user_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type books_wishlistUpdateWithoutMediasInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    users?: usersUpdateOneRequiredWithoutBooks_wishlistNestedInput
  }

  export type books_wishlistUncheckedUpdateWithoutMediasInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type books_wishlistUncheckedUpdateManyWithoutBooks_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type films_wishlistUpdateWithoutMediasInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutFilms_wishlistNestedInput
  }

  export type films_wishlistUncheckedUpdateWithoutMediasInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type films_wishlistUncheckedUpdateManyWithoutFilms_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type readingsUpdateWithoutMediasInput = {
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutReadingsNestedInput
  }

  export type readingsUncheckedUpdateWithoutMediasInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type readingsUncheckedUpdateManyWithoutReadingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tv_shows_wishlistUpdateWithoutMediasInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutTv_shows_wishlistNestedInput
  }

  export type tv_shows_wishlistUncheckedUpdateWithoutMediasInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type tv_shows_wishlistUncheckedUpdateManyWithoutTv_shows_wishlistInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type watchingsUpdateWithoutMediasInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutWatchingsNestedInput
  }

  export type watchingsUncheckedUpdateWithoutMediasInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type watchingsUncheckedUpdateManyWithoutWatchingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type books_wishlistCreateManyUsersInput = {
    id?: number
    medias_id: number
    created_at?: Date | string
    updated_at?: Date | string | null
    book_api_id: string
    title: string
    author: string
    description: string
    img: string
    page_count: number
  }

  export type films_wishlistCreateManyUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    tagline: string
    runtime: number
    created_at?: Date | string
    img: string
    vote_average: number
    overview: string
  }

  export type readingsCreateManyUsersInput = {
    id?: number
    medias_id: number
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
    book_api_id: string
    title: string
    author: string
    description?: string | null
    img: string
    page_count: number
    read_at?: Date | string
  }

  export type sessionsCreateManyUsersInput = {
    id?: number
    token: string
    created_at?: Date | string
    updated_at?: Date | string | null
    active?: boolean
  }

  export type tv_shows_wishlistCreateManyUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    creator: string
    seasons_number: number
    tagline: string
    img: string
    created_at?: Date | string
    vote_average: number
    overview: string
  }

  export type watchingsCreateManyUsersInput = {
    id?: number
    medias_id: number
    api_id: string
    title: string
    overview: string
    release_date: string
    img: string
    created_at?: Date | string
    vote_average: number
    watched_at?: Date | string
    grade?: Decimal | DecimalJsLike | number | string
    review?: string | null
  }

  export type books_wishlistUpdateWithoutUsersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    medias?: mediasUpdateOneRequiredWithoutBooks_wishlistNestedInput
  }

  export type books_wishlistUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
  }

  export type films_wishlistUpdateWithoutUsersInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    medias?: mediasUpdateOneRequiredWithoutFilms_wishlistNestedInput
  }

  export type films_wishlistUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    tagline?: StringFieldUpdateOperationsInput | string
    runtime?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    img?: StringFieldUpdateOperationsInput | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type readingsUpdateWithoutUsersInput = {
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
    medias?: mediasUpdateOneRequiredWithoutReadingsNestedInput
  }

  export type readingsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    book_api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    author?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    img?: StringFieldUpdateOperationsInput | string
    page_count?: IntFieldUpdateOperationsInput | number
    read_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUpdateWithoutUsersInput = {
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sessionsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sessionsUncheckedUpdateManyWithoutSessionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tv_shows_wishlistUpdateWithoutUsersInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
    medias?: mediasUpdateOneRequiredWithoutTv_shows_wishlistNestedInput
  }

  export type tv_shows_wishlistUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    creator?: StringFieldUpdateOperationsInput | string
    seasons_number?: IntFieldUpdateOperationsInput | number
    tagline?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    overview?: StringFieldUpdateOperationsInput | string
  }

  export type watchingsUpdateWithoutUsersInput = {
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
    medias?: mediasUpdateOneRequiredWithoutWatchingsNestedInput
  }

  export type watchingsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    medias_id?: IntFieldUpdateOperationsInput | number
    api_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    overview?: StringFieldUpdateOperationsInput | string
    release_date?: StringFieldUpdateOperationsInput | string
    img?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_average?: FloatFieldUpdateOperationsInput | number
    watched_at?: DateTimeFieldUpdateOperationsInput | Date | string
    grade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    review?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}