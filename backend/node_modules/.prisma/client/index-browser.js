
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.9.0
 * Query Engine version: 39190b250ebc338586e25e6da45e5e783bc8a635
 */
Prisma.prismaVersion = {
  client: "4.9.0",
  engine: "39190b250ebc338586e25e6da45e5e783bc8a635"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.Books_wishlistScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  medias_id: 'medias_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  book_api_id: 'book_api_id',
  title: 'title',
  author: 'author',
  description: 'description',
  img: 'img',
  page_count: 'page_count'
});

exports.Prisma.Films_wishlistScalarFieldEnum = makeEnum({
  id: 'id',
  medias_id: 'medias_id',
  user_id: 'user_id',
  api_id: 'api_id',
  title: 'title',
  tagline: 'tagline',
  runtime: 'runtime',
  created_at: 'created_at',
  img: 'img',
  vote_average: 'vote_average',
  overview: 'overview'
});

exports.Prisma.MediasScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.ReadingsScalarFieldEnum = makeEnum({
  id: 'id',
  medias_id: 'medias_id',
  user_id: 'user_id',
  grade: 'grade',
  review: 'review',
  book_api_id: 'book_api_id',
  title: 'title',
  author: 'author',
  description: 'description',
  img: 'img',
  page_count: 'page_count',
  read_at: 'read_at'
});

exports.Prisma.SessionsScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  created_at: 'created_at',
  updated_at: 'updated_at',
  active: 'active'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tv_shows_wishlistScalarFieldEnum = makeEnum({
  id: 'id',
  medias_id: 'medias_id',
  user_id: 'user_id',
  api_id: 'api_id',
  title: 'title',
  creator: 'creator',
  seasons_number: 'seasons_number',
  tagline: 'tagline',
  img: 'img',
  created_at: 'created_at',
  vote_average: 'vote_average',
  overview: 'overview'
});

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  password: 'password',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.WatchingsScalarFieldEnum = makeEnum({
  id: 'id',
  medias_id: 'medias_id',
  user_id: 'user_id',
  api_id: 'api_id',
  title: 'title',
  overview: 'overview',
  release_date: 'release_date',
  img: 'img',
  created_at: 'created_at',
  vote_average: 'vote_average',
  watched_at: 'watched_at',
  grade: 'grade',
  review: 'review'
});


exports.Prisma.ModelName = makeEnum({
  medias: 'medias',
  readings: 'readings',
  sessions: 'sessions',
  users: 'users',
  books_wishlist: 'books_wishlist',
  films_wishlist: 'films_wishlist',
  tv_shows_wishlist: 'tv_shows_wishlist',
  watchings: 'watchings'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
