{"ast":null,"code":"import axios from \"axios\";\nconst baseUrlTest = \"http://localhost:4000\"; //url de teste\n\nasync function postSignUp(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signup`, body);\n  return response.data;\n}\nasync function postSignIn(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signin`, body);\n  return response.data;\n}\nasync function getUserReadings(token) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(`${baseUrlTest}/readings`, config);\n  return response.data;\n}\nasync function getUserWatchings(token, medias_id) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(`${baseUrlTest}/watchings/${medias_id}`, config);\n  return response.data;\n}\nasync function postNewReading(token, newReading) {\n  console.log(token);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(`${baseUrlTest}/readings`, newReading, config);\n  return response.data;\n}\nasync function postNewWatching(token, newWatching) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(`${baseUrlTest}/watchings`, newWatching, config);\n  return response.data;\n}\nasync function updateBookGradeOrReviewOrDate(token, book_api_id, data) {\n  const body = {\n    ...data,\n    book_api_id\n  };\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(`${baseUrlTest}/readings`, body, config);\n  return response.data;\n}\nasync function updateWatchingGradeOrReviewOrDate(token, api_id, data) {\n  const body = {\n    ...data,\n    api_id\n  };\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(`${baseUrlTest}/watchings`, body, config);\n  return response.data;\n}\nasync function getUserBooksWishlist(token) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(`${baseUrlTest}/books`, config);\n  return response.data;\n}\nasync function postNewBookWishList(token, newBookWishList) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(`${baseUrlTest}/books`, newBookWishList, config);\n  return response.data;\n}\nasync function postNewFilmWishList(token, newFilmWishList) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(`${baseUrlTest}/films`, newFilmWishList, config);\n  return response.data;\n}\nexport { postSignUp, postSignIn, getUserReadings, postNewReading, updateBookGradeOrReviewOrDate, updateWatchingGradeOrReviewOrDate, getUserBooksWishlist, postNewBookWishList, postNewFilmWishList, getUserWatchings, postNewWatching };","map":{"version":3,"names":["axios","baseUrlTest","postSignUp","body","response","post","data","postSignIn","getUserReadings","token","config","headers","Authorization","get","getUserWatchings","medias_id","postNewReading","newReading","console","log","postNewWatching","newWatching","updateBookGradeOrReviewOrDate","book_api_id","put","updateWatchingGradeOrReviewOrDate","api_id","getUserBooksWishlist","postNewBookWishList","newBookWishList","postNewFilmWishList","newFilmWishList"],"sources":["/home/gabriel/Driven/desenv_web/autoral-front/src/services/services.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseUrlTest = \"http://localhost:4000\"; //url de teste\n\nasync function postSignUp(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signup`, body);\n  return response.data;\n}\n\nasync function postSignIn(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signin`, body);\n  return response.data;\n}\n\nasync function getUserReadings(token) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.get(`${baseUrlTest}/readings`, config);\n\n  return response.data;\n}\n\nasync function getUserWatchings(token, medias_id) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.get(\n    `${baseUrlTest}/watchings/${medias_id}`,\n    config\n  );\n\n  return response.data;\n}\n\nasync function postNewReading(token, newReading) {\n  console.log(token);\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.post(\n    `${baseUrlTest}/readings`,\n    newReading,\n    config\n  );\n  return response.data;\n}\n\nasync function postNewWatching(token, newWatching) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.post(\n    `${baseUrlTest}/watchings`,\n    newWatching,\n    config\n  );\n  return response.data;\n}\n\nasync function updateBookGradeOrReviewOrDate(token, book_api_id, data) {\n  const body = { ...data, book_api_id };\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.put(`${baseUrlTest}/readings`, body, config);\n  return response.data;\n}\n\nasync function updateWatchingGradeOrReviewOrDate(token, api_id, data) {\n  const body = { ...data, api_id };\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.put(`${baseUrlTest}/watchings`, body, config);\n  return response.data;\n}\n\nasync function getUserBooksWishlist(token) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.get(`${baseUrlTest}/books`, config);\n\n  return response.data;\n}\n\nasync function postNewBookWishList(token, newBookWishList) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.post(\n    `${baseUrlTest}/books`,\n    newBookWishList,\n    config\n  );\n  return response.data;\n}\n\nasync function postNewFilmWishList(token, newFilmWishList) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.post(\n    `${baseUrlTest}/films`,\n    newFilmWishList,\n    config\n  );\n  return response.data;\n}\n\nexport {\n  postSignUp,\n  postSignIn,\n  getUserReadings,\n  postNewReading,\n  updateBookGradeOrReviewOrDate,\n  updateWatchingGradeOrReviewOrDate,\n  getUserBooksWishlist,\n  postNewBookWishList,\n  postNewFilmWishList,\n  getUserWatchings,\n  postNewWatching,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAG,uBAAuB,CAAC,CAAC;;AAE7C,eAAeC,UAAU,CAACC,IAAI,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,WAAY,eAAc,EAAEE,IAAI,CAAC;EACtE,OAAOC,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeC,UAAU,CAACJ,IAAI,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,WAAY,eAAc,EAAEE,IAAI,CAAC;EACtE,OAAOC,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeE,eAAe,CAACC,KAAK,EAAE;EACpC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAE,GAAEZ,WAAY,WAAU,EAAES,MAAM,CAAC;EAEnE,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeQ,gBAAgB,CAACL,KAAK,EAAEM,SAAS,EAAE;EAChD,MAAML,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAC7B,GAAEZ,WAAY,cAAac,SAAU,EAAC,EACvCL,MAAM,CACP;EAED,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeU,cAAc,CAACP,KAAK,EAAEQ,UAAU,EAAE;EAC/CC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC9B,GAAEJ,WAAY,WAAU,EACzBgB,UAAU,EACVP,MAAM,CACP;EACD,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAec,eAAe,CAACX,KAAK,EAAEY,WAAW,EAAE;EACjD,MAAMX,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC9B,GAAEJ,WAAY,YAAW,EAC1BoB,WAAW,EACXX,MAAM,CACP;EACD,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAegB,6BAA6B,CAACb,KAAK,EAAEc,WAAW,EAAEjB,IAAI,EAAE;EACrE,MAAMH,IAAI,GAAG;IAAE,GAAGG,IAAI;IAAEiB;EAAY,CAAC;EACrC,MAAMb,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACwB,GAAG,CAAE,GAAEvB,WAAY,WAAU,EAAEE,IAAI,EAAEO,MAAM,CAAC;EACzE,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAemB,iCAAiC,CAAChB,KAAK,EAAEiB,MAAM,EAAEpB,IAAI,EAAE;EACpE,MAAMH,IAAI,GAAG;IAAE,GAAGG,IAAI;IAAEoB;EAAO,CAAC;EAChC,MAAMhB,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACwB,GAAG,CAAE,GAAEvB,WAAY,YAAW,EAAEE,IAAI,EAAEO,MAAM,CAAC;EAC1E,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeqB,oBAAoB,CAAClB,KAAK,EAAE;EACzC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACa,GAAG,CAAE,GAAEZ,WAAY,QAAO,EAAES,MAAM,CAAC;EAEhE,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAesB,mBAAmB,CAACnB,KAAK,EAAEoB,eAAe,EAAE;EACzD,MAAMnB,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC9B,GAAEJ,WAAY,QAAO,EACtB4B,eAAe,EACfnB,MAAM,CACP;EACD,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAewB,mBAAmB,CAACrB,KAAK,EAAEsB,eAAe,EAAE;EACzD,MAAMrB,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC9B,GAAEJ,WAAY,QAAO,EACtB8B,eAAe,EACfrB,MAAM,CACP;EACD,OAAON,QAAQ,CAACE,IAAI;AACtB;AAEA,SACEJ,UAAU,EACVK,UAAU,EACVC,eAAe,EACfQ,cAAc,EACdM,6BAA6B,EAC7BG,iCAAiC,EACjCE,oBAAoB,EACpBC,mBAAmB,EACnBE,mBAAmB,EACnBhB,gBAAgB,EAChBM,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}