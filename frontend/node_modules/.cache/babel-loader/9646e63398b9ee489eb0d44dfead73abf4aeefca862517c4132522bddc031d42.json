{"ast":null,"code":"import axios from \"axios\";\nconst baseUrlTest = \"http://localhost:4000\"; //url de teste\n\nasync function postSignUp(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signup`, body);\n  return response.data;\n}\nasync function postSignIn(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signin`, body);\n  return response.data;\n}\nasync function getApiBooks(search) {\n  const api_key = process.env.REACT_APP_GOOGLE_API_KEY;\n  let response;\n  try {\n    response = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${search}&printType=books&orderBy=relevance&maxResults=5&key=${api_key}`);\n  } catch (error) {\n    console.log(error);\n  }\n  return response;\n}\nasync function getUserReadings(token) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(`${baseUrlTest}`, config);\n  return response.data;\n}\nasync function postNewReading(token, newReading) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(`${baseUrlTest}/readings`, newReading, config);\n  return response.data;\n}\nexport { postSignUp, postSignIn, getApiBooks, getUserReadings, postNewReading };","map":{"version":3,"names":["axios","baseUrlTest","postSignUp","body","response","post","data","postSignIn","getApiBooks","search","api_key","process","env","REACT_APP_GOOGLE_API_KEY","get","error","console","log","getUserReadings","token","config","headers","Authorization","postNewReading","newReading"],"sources":["/home/gabriel/Driven/desenv_web/autoral-front/src/services/services.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseUrlTest = \"http://localhost:4000\"; //url de teste\n\nasync function postSignUp(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signup`, body);\n  return response.data;\n}\n\nasync function postSignIn(body) {\n  const response = await axios.post(`${baseUrlTest}/users/signin`, body);\n  return response.data;\n}\n\nasync function getApiBooks(search) {\n  const api_key = process.env.REACT_APP_GOOGLE_API_KEY;\n  let response;\n  try {\n    response = await axios.get(\n      `https://www.googleapis.com/books/v1/volumes?q=${search}&printType=books&orderBy=relevance&maxResults=5&key=${api_key}`\n    );\n  } catch (error) {\n    console.log(error);\n  }\n  return response;\n}\n\nasync function getUserReadings(token) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.get(`${baseUrlTest}`, config);\n  return response.data;\n}\n\nasync function postNewReading(token, newReading) {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const response = await axios.post(\n    `${baseUrlTest}/readings`,\n    newReading,\n    config\n  );\n  return response.data;\n}\n\nexport { postSignUp, postSignIn, getApiBooks, getUserReadings, postNewReading };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAG,uBAAuB,CAAC,CAAC;;AAE7C,eAAeC,UAAU,CAACC,IAAI,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,WAAY,eAAc,EAAEE,IAAI,CAAC;EACtE,OAAOC,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeC,UAAU,CAACJ,IAAI,EAAE;EAC9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,WAAY,eAAc,EAAEE,IAAI,CAAC;EACtE,OAAOC,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeE,WAAW,CAACC,MAAM,EAAE;EACjC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;EACpD,IAAIT,QAAQ;EACZ,IAAI;IACFA,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CACvB,iDAAgDL,MAAO,uDAAsDC,OAAQ,EAAC,CACxH;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EACA,OAAOX,QAAQ;AACjB;AAEA,eAAec,eAAe,CAACC,KAAK,EAAE;EACpC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAE,GAAEb,WAAY,EAAC,EAAEmB,MAAM,CAAC;EAC1D,OAAOhB,QAAQ,CAACE,IAAI;AACtB;AAEA,eAAeiB,cAAc,CAACJ,KAAK,EAAEK,UAAU,EAAE;EAC/C,MAAMJ,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASH,KAAM;IAAE;EAC9C,CAAC;EACD,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC9B,GAAEJ,WAAY,WAAU,EACzBuB,UAAU,EACVJ,MAAM,CACP;EACD,OAAOhB,QAAQ,CAACE,IAAI;AACtB;AAEA,SAASJ,UAAU,EAAEK,UAAU,EAAEC,WAAW,EAAEU,eAAe,EAAEK,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}