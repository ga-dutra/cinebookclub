{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Driven/desenv_web/autoral-front/src/components/ConfirmDialog.js\",\n  _s = $RefreshSig$();\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport useToken from \"../hooks/useToken\";\nimport { postNewReading } from \"../services/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfirmDialog(_ref) {\n  _s();\n  let {\n    confirmDialog,\n    setConfirmDialog,\n    book\n  } = _ref;\n  const token = useToken();\n  function handleConfirmationDialog() {\n    if (confirmDialog.type === \"addReading\") {\n      addNewReading();\n    }\n  }\n  async function addNewReading() {\n    try {\n      await postNewReading(token, book);\n      setConfirmDialog({\n        ...confirmDialog,\n        isOpen: false\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: confirmDialog.isOpen,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(BookImage, {\n          src: book.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [book.title, \" ?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"green\",\n          onClick: handleConfirmationDialog,\n          children: \"Sim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"red\",\n          onClick: () => setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n          }),\n          children: \"N\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmDialog, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});\n_c = ConfirmDialog;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: auto;\n  max-height: 320px;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n  h6 {\n    font-family: \"Barlow Condensed\", sans-serif;\n    font-weight: 500;\n    font-size: 24px;\n  }\n`;\n_c2 = Wrapper;\nconst Button = styled.button`\n  width: 60px;\n  height: 30px;\n  margin: 0 14px;\n  background-color: ${props => props.color};\n  font-family: \"Barlow Condensed\", sans-serif;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 4px;\n`;\n_c3 = Button;\nconst BookImage = styled.img`\n  width: 90px;\n  height: 130px;\n  margin-bottom: -12px;\n`;\n_c4 = BookImage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ConfirmDialog\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"BookImage\");","map":{"version":3,"names":["Dialog","DialogTitle","DialogContent","DialogActions","styled","useToken","postNewReading","ConfirmDialog","confirmDialog","setConfirmDialog","book","token","handleConfirmationDialog","type","addNewReading","isOpen","error","console","log","img","title","Wrapper","div","Button","button","props","color","BookImage"],"sources":["/home/gabriel/Driven/desenv_web/autoral-front/src/components/ConfirmDialog.js"],"sourcesContent":["import {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport useToken from \"../hooks/useToken\";\nimport { postNewReading } from \"../services/services\";\n\nexport default function ConfirmDialog({\n  confirmDialog,\n  setConfirmDialog,\n  book,\n}) {\n  const token = useToken();\n\n  function handleConfirmationDialog() {\n    if (confirmDialog.type === \"addReading\") {\n      addNewReading();\n    }\n  }\n\n  async function addNewReading() {\n    try {\n      await postNewReading(token, book);\n      setConfirmDialog({\n        ...confirmDialog,\n        isOpen: false,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Dialog open={confirmDialog.isOpen}>\n      <Wrapper>\n        <DialogTitle>\n          <BookImage src={book.img}></BookImage>\n        </DialogTitle>\n        <DialogContent>\n          <h6>{book.title} ?</h6>\n        </DialogContent>\n        <DialogActions>\n          <Button color={\"green\"} onClick={handleConfirmationDialog}>\n            Sim\n          </Button>\n          <Button\n            color={\"red\"}\n            onClick={() =>\n              setConfirmDialog({\n                ...confirmDialog,\n                isOpen: false,\n              })\n            }\n          >\n            NÃ£o\n          </Button>\n        </DialogActions>\n      </Wrapper>\n    </Dialog>\n  );\n}\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: auto;\n  max-height: 320px;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n  h6 {\n    font-family: \"Barlow Condensed\", sans-serif;\n    font-weight: 500;\n    font-size: 24px;\n  }\n`;\nconst Button = styled.button`\n  width: 60px;\n  height: 30px;\n  margin: 0 14px;\n  background-color: ${(props) => props.color};\n  font-family: \"Barlow Condensed\", sans-serif;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 4px;\n`;\n\nconst BookImage = styled.img`\n  width: 90px;\n  height: 130px;\n  margin-bottom: -12px;\n`;\n"],"mappings":";;AAAA,SACEA,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,QACR,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,cAAc,QAAQ,sBAAsB;AAAC;AAEtD,eAAe,SAASC,aAAa,OAIlC;EAAA;EAAA,IAJmC;IACpCC,aAAa;IACbC,gBAAgB;IAChBC;EACF,CAAC;EACC,MAAMC,KAAK,GAAGN,QAAQ,EAAE;EAExB,SAASO,wBAAwB,GAAG;IAClC,IAAIJ,aAAa,CAACK,IAAI,KAAK,YAAY,EAAE;MACvCC,aAAa,EAAE;IACjB;EACF;EAEA,eAAeA,aAAa,GAAG;IAC7B,IAAI;MACF,MAAMR,cAAc,CAACK,KAAK,EAAED,IAAI,CAAC;MACjCD,gBAAgB,CAAC;QACf,GAAGD,aAAa;QAChBO,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEA,oBACE,QAAC,MAAM;IAAC,IAAI,EAAER,aAAa,CAACO,MAAO;IAAA,uBACjC,QAAC,OAAO;MAAA,wBACN,QAAC,WAAW;QAAA,uBACV,QAAC,SAAS;UAAC,GAAG,EAAEL,IAAI,CAACS;QAAI;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,QAC1B,eACd,QAAC,aAAa;QAAA,uBACZ;UAAA,WAAKT,IAAI,CAACU,KAAK,EAAC,IAAE;QAAA;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACT,eAChB,QAAC,aAAa;QAAA,wBACZ,QAAC,MAAM;UAAC,KAAK,EAAE,OAAQ;UAAC,OAAO,EAAER,wBAAyB;UAAA,UAAC;QAE3D;UAAA;UAAA;UAAA;QAAA,QAAS,eACT,QAAC,MAAM;UACL,KAAK,EAAE,KAAM;UACb,OAAO,EAAE,MACPH,gBAAgB,CAAC;YACf,GAAGD,aAAa;YAChBO,MAAM,EAAE;UACV,CAAC,CACF;UAAA,UACF;QAED;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACH;AAEb;AAAC,GArDuBR,aAAa;EAAA,QAKrBF,QAAQ;AAAA;AAAA,KALAE,aAAa;AAsDrC,MAAMc,OAAO,GAAGjB,MAAM,CAACkB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAdID,OAAO;AAeb,MAAME,MAAM,GAAGnB,MAAM,CAACoB,MAAO;AAC7B;AACA;AACA;AACA,sBAAuBC,KAAK,IAAKA,KAAK,CAACC,KAAM;AAC7C;AACA;AACA;AACA;AACA,CAAC;AAAC,MATIH,MAAM;AAWZ,MAAMI,SAAS,GAAGvB,MAAM,CAACe,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAAC,MAJIQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}